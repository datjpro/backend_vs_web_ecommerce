{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [paymentMethods, setPaymentMethods] = useState([]);\n  const [customer, setCustomer] = useState(null);\n  const [seller, setSeller] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  // Hàm gọi API lấy tất cả phương thức thanh toán\n  const fetchPaymentMethods = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/payment-methods/all', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setPaymentMethods(res.data || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy phương thức thanh toán:', error.message);\n    }\n  };\n\n  // Gọi API lấy phương thức thanh toán, danh mục và sản phẩm khi component được mount\n  useEffect(() => {\n    fetchPaymentMethods();\n    // Các API khác (ví dụ: lấy danh mục, sản phẩm)\n  }, []);\n  const value = {\n    paymentMethods,\n    // Cung cấp paymentMethods trong context\n    products,\n    cartItems,\n    setCartItems,\n    customer,\n    seller,\n    categories\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"C2HSYPr3alpWOjuGa2DhTqaJt/A=\");\n_c = AppContextProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","axios","AppContext","AppContextProvider","children","paymentMethods","setPaymentMethods","customer","setCustomer","seller","setSeller","products","setProducts","cartItems","setCartItems","categories","setCategories","fetchPaymentMethods","res","get","headers","Authorization","localStorage","getItem","data","error","console","message","value","useAppContext"],"sources":["D:/Ecommerce/frontend/src/context/AppContext.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const [customer, setCustomer] = useState(null);\r\n  const [seller, setSeller] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  // Hàm gọi API lấy tất cả phương thức thanh toán\r\n  const fetchPaymentMethods = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/payment-methods/all', {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setPaymentMethods(res.data || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy phương thức thanh toán:', error.message);\r\n    }\r\n  };\r\n\r\n  // Gọi API lấy phương thức thanh toán, danh mục và sản phẩm khi component được mount\r\n  useEffect(() => {\r\n    fetchPaymentMethods();\r\n    // Các API khác (ví dụ: lấy danh mục, sản phẩm)\r\n  }, []);\r\n\r\n  const value = {\r\n    paymentMethods, // Cung cấp paymentMethods trong context\r\n    products,\r\n    cartItems,\r\n    setCartItems,\r\n    customer,\r\n    seller,\r\n    categories\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,MAAMC,UAAU,gBAAGL,aAAa,EAAE;AAEzC,OAAO,MAAMM,kBAAkB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC7C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMiB,mBAAmB,GAAG,YAAY;IACtC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,+CAA+C,EAAE;QAC3EC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAAE;MACtE,CAAC,CAAC;MACFjB,iBAAiB,CAACY,GAAG,CAACM,IAAI,IAAI,EAAE,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrE;EACF,CAAC;;EAED;EACA5B,SAAS,CAAC,MAAM;IACdkB,mBAAmB,EAAE;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,KAAK,GAAG;IACZvB,cAAc;IAAE;IAChBM,QAAQ;IACRE,SAAS;IACTC,YAAY;IACZP,QAAQ;IACRE,MAAM;IACNM;EACF,CAAC;EAED,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAEa,KAAM;IAAA,UAC/BxB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAC,GAzCWD,kBAAkB;AAAA,KAAlBA,kBAAkB;AA2C/B,OAAO,MAAM0B,aAAa,GAAG;EAAA;EAAA,OAAM/B,UAAU,CAACI,UAAU,CAAC;AAAA;AAAC,IAA7C2B,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}