{"ast":null,"code":"// import React, { useState, useEffect } from 'react'; \n// import { Link, useNavigate } from 'react-router-dom'; \n// import axios from 'axios';\n// import './cart.css'; \n\n// export const Cart = () => {   \n//   const navigate = useNavigate();   \n//   const [cartItems, setCartItems] = useState([]);   \n//   const [selectedItems, setSelectedItems] = useState([]); \n\n//   useEffect(() => {\n//   const userData = localStorage.getItem('user');\n//   if (userData) {\n//     const parsedUser = JSON.parse(userData);\n//     axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`)\n//       .then((res) => {\n//         setSelectedItems(res.data.map(item => item.productId));  // Chọn tất cả sản phẩm trong giỏ hàng\n//       })\n//       .catch((err) => {\n//         console.error('Lỗi lấy giỏ hàng:', err);\n//       });\n//   }\n// }, []);\n\n//   const totalSelectedPrice = cartItems\n//     .filter(item => selectedItems.includes(item.productId))\n//     .reduce((sum, item) => sum + item.productPrice * item.quantity, 0);\n\n//   return (\n//     <div className=\"cart\">\n//       <h2>Giỏ hàng của bạn</h2>\n\n//       {cartItems.length === 0 ? (\n//         <div className=\"empty-cart\">\n//           <p>Giỏ hàng trống</p>\n//           <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\n//         </div>\n//       ) : (\n//         <>\n//           <div className=\"cart-header\">\n//             <input \n//               type=\"checkbox\" \n//               checked={selectedItems.length === cartItems.length}\n//               onChange={() => {\n//                 if (selectedItems.length === cartItems.length) {\n//                   setSelectedItems([]);\n//                 } else {\n//                   setSelectedItems(cartItems.map(item => item.productId));\n//                 }\n//               }} \n//             />\n//             <span>Chọn tất cả</span>\n//           </div>\n\n//           <div className=\"cart-items\">\n//             {cartItems.map((item, index) => (\n//               <div className=\"cart-item\" key={index}>\n//                 <input \n//                   type=\"checkbox\" \n//                   checked={selectedItems.includes(item.productId)} \n//                   onChange={() => {\n//                     if (selectedItems.includes(item.productId)) {\n//                       setSelectedItems(selectedItems.filter(id => id !== item.productId));\n//                     } else {\n//                       setSelectedItems([...selectedItems, item.productId]);\n//                     }\n//                   }} \n//                 />\n//                 <img src={item.productImage} alt={item.productName} />\n//                 <div className=\"cart-item-info\">\n//                   <h4>{item.productName}</h4>\n//                   <p>Giá: đ{item.productPrice.toLocaleString()}</p>\n//                   <div className=\"quantity-control\">\n//                     <button>-</button>\n//                     <input type=\"text\" value={item.quantity} readOnly />\n//                     <button>+</button>\n//                   </div>\n//                   <p>Thành tiền: đ{(item.productPrice * item.quantity).toLocaleString()}</p>\n//                   <button className=\"btn-delete\">Xóa</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n\n//           <div className=\"cart-footer\">\n//             <div className=\"footer-left\">\n//               <input \n//                 type=\"checkbox\" \n//                 checked={selectedItems.length === cartItems.length} \n//                 onChange={() => {\n//                   if (selectedItems.length === cartItems.length) {\n//                     setSelectedItems([]);\n//                   } else {\n//                     setSelectedItems(cartItems.map(item => item.productId));\n//                   }\n//                 }} \n//               />\n//               <span>Chọn tất cả ({selectedItems.length})</span>\n//             </div>\n\n//             <div className=\"footer-right\">\n//               <p>\n//                 Tổng thanh toán: \n//                 <span>đ{totalSelectedPrice.toLocaleString()}</span>\n//               </p>\n//               <button className=\"btn-buy\">Mua hàng</button>\n//             </div>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["D:/Ecommerce/frontend/src/components/Cart/Cart.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react'; \r\n// import { Link, useNavigate } from 'react-router-dom'; \r\n// import axios from 'axios';\r\n// import './cart.css'; \r\n\r\n// export const Cart = () => {   \r\n//   const navigate = useNavigate();   \r\n//   const [cartItems, setCartItems] = useState([]);   \r\n//   const [selectedItems, setSelectedItems] = useState([]); \r\n\r\n//   useEffect(() => {\r\n//   const userData = localStorage.getItem('user');\r\n//   if (userData) {\r\n//     const parsedUser = JSON.parse(userData);\r\n//     axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`)\r\n//       .then((res) => {\r\n//         setSelectedItems(res.data.map(item => item.productId));  // Chọn tất cả sản phẩm trong giỏ hàng\r\n//       })\r\n//       .catch((err) => {\r\n//         console.error('Lỗi lấy giỏ hàng:', err);\r\n//       });\r\n//   }\r\n// }, []);\r\n\r\n\r\n//   const totalSelectedPrice = cartItems\r\n//     .filter(item => selectedItems.includes(item.productId))\r\n//     .reduce((sum, item) => sum + item.productPrice * item.quantity, 0);\r\n\r\n//   return (\r\n//     <div className=\"cart\">\r\n//       <h2>Giỏ hàng của bạn</h2>\r\n      \r\n//       {cartItems.length === 0 ? (\r\n//         <div className=\"empty-cart\">\r\n//           <p>Giỏ hàng trống</p>\r\n//           <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <div className=\"cart-header\">\r\n//             <input \r\n//               type=\"checkbox\" \r\n//               checked={selectedItems.length === cartItems.length}\r\n//               onChange={() => {\r\n//                 if (selectedItems.length === cartItems.length) {\r\n//                   setSelectedItems([]);\r\n//                 } else {\r\n//                   setSelectedItems(cartItems.map(item => item.productId));\r\n//                 }\r\n//               }} \r\n//             />\r\n//             <span>Chọn tất cả</span>\r\n//           </div>\r\n\r\n//           <div className=\"cart-items\">\r\n//             {cartItems.map((item, index) => (\r\n//               <div className=\"cart-item\" key={index}>\r\n//                 <input \r\n//                   type=\"checkbox\" \r\n//                   checked={selectedItems.includes(item.productId)} \r\n//                   onChange={() => {\r\n//                     if (selectedItems.includes(item.productId)) {\r\n//                       setSelectedItems(selectedItems.filter(id => id !== item.productId));\r\n//                     } else {\r\n//                       setSelectedItems([...selectedItems, item.productId]);\r\n//                     }\r\n//                   }} \r\n//                 />\r\n//                 <img src={item.productImage} alt={item.productName} />\r\n//                 <div className=\"cart-item-info\">\r\n//                   <h4>{item.productName}</h4>\r\n//                   <p>Giá: đ{item.productPrice.toLocaleString()}</p>\r\n//                   <div className=\"quantity-control\">\r\n//                     <button>-</button>\r\n//                     <input type=\"text\" value={item.quantity} readOnly />\r\n//                     <button>+</button>\r\n//                   </div>\r\n//                   <p>Thành tiền: đ{(item.productPrice * item.quantity).toLocaleString()}</p>\r\n//                   <button className=\"btn-delete\">Xóa</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n\r\n//           <div className=\"cart-footer\">\r\n//             <div className=\"footer-left\">\r\n//               <input \r\n//                 type=\"checkbox\" \r\n//                 checked={selectedItems.length === cartItems.length} \r\n//                 onChange={() => {\r\n//                   if (selectedItems.length === cartItems.length) {\r\n//                     setSelectedItems([]);\r\n//                   } else {\r\n//                     setSelectedItems(cartItems.map(item => item.productId));\r\n//                   }\r\n//                 }} \r\n//               />\r\n//               <span>Chọn tất cả ({selectedItems.length})</span>\r\n//             </div>\r\n\r\n//             <div className=\"footer-right\">\r\n//               <p>\r\n//                 Tổng thanh toán: \r\n//                 <span>đ{totalSelectedPrice.toLocaleString()}</span>\r\n//               </p>\r\n//               <button className=\"btn-buy\">Mua hàng</button>\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}