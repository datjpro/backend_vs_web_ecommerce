{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Cart\\\\Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './cart.css';\n\n// export const Cart = () => {\n//   const navigate = useNavigate();\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedItems, setSelectedItems] = useState([]);\n//   const userData = localStorage.getItem('user');\n//   const parsedUser = userData ? JSON.parse(userData) : null;\n\n//   useEffect(() => {\n//     if (!parsedUser) return;\n\n//     const fetchCartWithProductDetails = async () => {\n//       try {\n//         const cartRes = await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\n//         console.log(cartRes.data);  // Kiểm tra dữ liệu giỏ hàng\n//         const cartData = cartRes.data;\n\n//         const enrichedCart = await Promise.all(\n//           cartData.map(async (item) => {\n//             try {\n//               const productId = item.productId._id || item.productId;\n//               const productRes = await axios.get(`http://localhost:4003/api/product/${productId}`);\n\n//               console.log(productRes.data);  // Kiểm tra dữ liệu sản phẩm\n//               return {\n//                 ...item,\n//                 product: productRes.data\n//               };\n//             } catch (error) {\n//               console.error('Lỗi lấy sản phẩm:', error);\n//               return item;\n//             }\n//           })\n//         );\n\n//         setCartItems(enrichedCart);\n//         setSelectedItems(enrichedCart.map(item => item.productId));\n//       } catch (err) {\n//         console.error('Lỗi lấy giỏ hàng:', err);\n//       }\n//     };\n\n//     fetchCartWithProductDetails();\n//   }, [parsedUser?.id]);\n\n//   const totalSelectedPrice = cartItems\n//     .filter(item => selectedItems.includes(item.productId))\n//     .reduce((sum, item) => sum + (item.product?.price || 0) * item.quantity, 0);\n\n//   return (\n//     <div className=\"cart\">\n//       <h2>Giỏ hàng của bạn</h2>\n\n//       {cartItems.length === 0 ? (\n//         <div className=\"empty-cart\">\n//           <p>Giỏ hàng trống</p>\n//           <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\n//         </div>\n//       ) : (\n//         <>\n//           <div className=\"cart-header\">\n//             <input\n//               type=\"checkbox\"\n//               checked={selectedItems.length === cartItems.length}\n//               onChange={() => {\n//                 if (selectedItems.length === cartItems.length) {\n//                   setSelectedItems([]);\n//                 } else {\n//                   setSelectedItems(cartItems.map(item => item.productId));\n//                 }\n//               }}\n//             />\n//             <span>Chọn tất cả</span>\n//           </div>\n\n//           <div className=\"cart-items\">\n//             {cartItems.map((item, index) => (\n//               <div className=\"cart-item\" key={index}>\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={selectedItems.includes(item.productId)}\n//                   onChange={() => {\n//                     if (selectedItems.includes(item.productId)) {\n//                       setSelectedItems(selectedItems.filter(id => id !== item.productId));\n//                     } else {\n//                       setSelectedItems([...selectedItems, item.productId]);\n//                     }\n//                   }}\n//                 />\n//                 <img src={item.product?.image[0]} alt={item.product?.name || 'Sản phẩm'} />\n//                 <div className=\"cart-item-info\">\n//                   <h4>{item.product?.name || 'Tên sản phẩm'}</h4>\n//                   <p>Giá: đ{(item.product?.price || 0).toLocaleString()}</p>\n//                   <div className=\"quantity-control\">\n//                     <button>-</button>\n//                     <input type=\"text\" value={item.quantity} readOnly />\n//                     <button>+</button>\n//                   </div>\n//                   <p>Thành tiền: đ{((item.product?.price || 0) * item.quantity).toLocaleString()}</p>\n//                   <button className=\"btn-delete\">Xóa</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n\n//           <div className=\"cart-footer\">\n//             <div className=\"footer-left\">\n//               <input\n//                 type=\"checkbox\"\n//                 checked={selectedItems.length === cartItems.length}\n//                 onChange={() => {\n//                   if (selectedItems.length === cartItems.length) {\n//                     setSelectedItems([]);\n//                   } else {\n//                     setSelectedItems(cartItems.map(item => item.productId));\n//                   }\n//                 }}\n//               />\n//               <span>Chọn tất cả ({selectedItems.length})</span>\n//             </div>\n\n//             <div className=\"footer-right\">\n//               <p>\n//                 Tổng thanh toán:\n//                 <span> đ{totalSelectedPrice.toLocaleString()}</span>\n//               </p>\n//               <button className=\"btn-buy\">Mua hàng</button>\n//             </div>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };  \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Cart = () => {\n  _s();\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const userData = localStorage.getItem('user');\n  const parsedUser = userData ? JSON.parse(userData) : null;\n  useEffect(() => {\n    if (!parsedUser) return;\n    const fetchCartWithProductDetails = async () => {\n      try {\n        const cartRes = await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\n        const cartData = cartRes.data;\n        const enrichedCart = await Promise.all(cartData.map(async item => {\n          try {\n            const productId = item.productId._id || item.productId;\n            const productRes = await axios.get(`http://localhost:4003/api/product/${productId}`);\n            return {\n              ...item,\n              product: productRes.data\n            };\n          } catch (error) {\n            console.error('Lỗi lấy sản phẩm:', error);\n            return item;\n          }\n        }));\n        setCartItems(enrichedCart);\n        setSelectedItems(enrichedCart.map(item => item.productId._id || item.productId));\n      } catch (err) {\n        console.error('Lỗi lấy giỏ hàng:', err);\n      }\n    };\n    fetchCartWithProductDetails();\n  }, [parsedUser === null || parsedUser === void 0 ? void 0 : parsedUser.id]);\n  const handleUpdateQuantity = async (cartItemId, newQuantity) => {\n    if (newQuantity < 1) return;\n    try {\n      await axios.put(`http://localhost:3003/api/cart/${cartItemId}`, {\n        quantity: newQuantity\n      });\n      setCartItems(prev => prev.map(item => item._id === cartItemId ? {\n        ...item,\n        quantity: newQuantity\n      } : item));\n    } catch (err) {\n      console.error('Lỗi cập nhật số lượng:', err);\n    }\n  };\n  const totalSelectedPrice = cartItems.filter(item => selectedItems.includes(item.productId._id || item.productId)).reduce((sum, item) => {\n    var _item$product;\n    return sum + (((_item$product = item.product) === null || _item$product === void 0 ? void 0 : _item$product.price) || 0) * item.quantity;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gi\\u1ECF h\\xE0ng c\\u1EE7a b\\u1EA1n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Gi\\u1ECF h\\xE0ng tr\\u1ED1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn-continue\",\n        children: \"Ti\\u1EBFp t\\u1EE5c mua s\\u1EAFm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedItems.length === cartItems.length,\n          onChange: () => {\n            if (selectedItems.length === cartItems.length) {\n              setSelectedItems([]);\n            } else {\n              setSelectedItems(cartItems.map(item => item.productId._id || item.productId));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Ch\\u1ECDn t\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-items\",\n        children: cartItems.map((item, index) => {\n          var _item$product2, _item$product3, _item$product4, _item$product5, _item$product6;\n          const productId = item.productId._id || item.productId;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedItems.includes(productId),\n              onChange: () => {\n                if (selectedItems.includes(productId)) {\n                  setSelectedItems(selectedItems.filter(id => id !== productId));\n                } else {\n                  setSelectedItems([...selectedItems, productId]);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_item$product2 = item.product) === null || _item$product2 === void 0 ? void 0 : _item$product2.image[0],\n              alt: ((_item$product3 = item.product) === null || _item$product3 === void 0 ? void 0 : _item$product3.name) || 'Sản phẩm'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: ((_item$product4 = item.product) === null || _item$product4 === void 0 ? void 0 : _item$product4.name) || 'Tên sản phẩm'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Gi\\xE1: \\u0111\", (((_item$product5 = item.product) === null || _item$product5 === void 0 ? void 0 : _item$product5.price) || 0).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quantity-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateQuantity(item._id, item.quantity - 1),\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.quantity,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateQuantity(item._id, item.quantity + 1),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\xE0nh ti\\u1EC1n: \\u0111\", ((((_item$product6 = item.product) === null || _item$product6 === void 0 ? void 0 : _item$product6.price) || 0) * item.quantity).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete\",\n                children: \"X\\xF3a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedItems.length === cartItems.length,\n            onChange: () => {\n              if (selectedItems.length === cartItems.length) {\n                setSelectedItems([]);\n              } else {\n                setSelectedItems(cartItems.map(item => item.productId._id || item.productId));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Ch\\u1ECDn t\\u1EA5t c\\u1EA3 (\", selectedItems.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"T\\u1ED5ng thanh to\\xE1n:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u0111\", totalSelectedPrice.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-buy\",\n            children: \"Mua h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"ceyU/Etxg+t4d61lxEKa1A2MqsA=\", false, function () {\n  return [useNavigate];\n});\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","Cart","navigate","cartItems","setCartItems","selectedItems","setSelectedItems","userData","localStorage","getItem","parsedUser","JSON","parse","fetchCartWithProductDetails","cartRes","get","id","cartData","data","enrichedCart","Promise","all","map","item","productId","_id","productRes","product","error","console","err","handleUpdateQuantity","cartItemId","newQuantity","put","quantity","prev","totalSelectedPrice","filter","includes","reduce","sum","price","length","index","image","name","toLocaleString"],"sources":["D:/Ecommerce/frontend/src/components/Cart/Cart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; \r\nimport axios from 'axios';\r\nimport './cart.css';\r\n\r\n// export const Cart = () => {\r\n//   const navigate = useNavigate();\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const [selectedItems, setSelectedItems] = useState([]);\r\n//   const userData = localStorage.getItem('user');\r\n//   const parsedUser = userData ? JSON.parse(userData) : null;\r\n\r\n//   useEffect(() => {\r\n//     if (!parsedUser) return;\r\n\r\n//     const fetchCartWithProductDetails = async () => {\r\n//       try {\r\n//         const cartRes = await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\r\n//         console.log(cartRes.data);  // Kiểm tra dữ liệu giỏ hàng\r\n//         const cartData = cartRes.data;\r\n\r\n//         const enrichedCart = await Promise.all(\r\n//           cartData.map(async (item) => {\r\n//             try {\r\n//               const productId = item.productId._id || item.productId;\r\n//               const productRes = await axios.get(`http://localhost:4003/api/product/${productId}`);\r\n\r\n//               console.log(productRes.data);  // Kiểm tra dữ liệu sản phẩm\r\n//               return {\r\n//                 ...item,\r\n//                 product: productRes.data\r\n//               };\r\n//             } catch (error) {\r\n//               console.error('Lỗi lấy sản phẩm:', error);\r\n//               return item;\r\n//             }\r\n//           })\r\n//         );\r\n\r\n//         setCartItems(enrichedCart);\r\n//         setSelectedItems(enrichedCart.map(item => item.productId));\r\n//       } catch (err) {\r\n//         console.error('Lỗi lấy giỏ hàng:', err);\r\n//       }\r\n//     };\r\n\r\n//     fetchCartWithProductDetails();\r\n//   }, [parsedUser?.id]);\r\n\r\n\r\n//   const totalSelectedPrice = cartItems\r\n//     .filter(item => selectedItems.includes(item.productId))\r\n//     .reduce((sum, item) => sum + (item.product?.price || 0) * item.quantity, 0);\r\n\r\n//   return (\r\n//     <div className=\"cart\">\r\n//       <h2>Giỏ hàng của bạn</h2>\r\n\r\n//       {cartItems.length === 0 ? (\r\n//         <div className=\"empty-cart\">\r\n//           <p>Giỏ hàng trống</p>\r\n//           <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <div className=\"cart-header\">\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               checked={selectedItems.length === cartItems.length}\r\n//               onChange={() => {\r\n//                 if (selectedItems.length === cartItems.length) {\r\n//                   setSelectedItems([]);\r\n//                 } else {\r\n//                   setSelectedItems(cartItems.map(item => item.productId));\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <span>Chọn tất cả</span>\r\n//           </div>\r\n\r\n//           <div className=\"cart-items\">\r\n//             {cartItems.map((item, index) => (\r\n//               <div className=\"cart-item\" key={index}>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={selectedItems.includes(item.productId)}\r\n//                   onChange={() => {\r\n//                     if (selectedItems.includes(item.productId)) {\r\n//                       setSelectedItems(selectedItems.filter(id => id !== item.productId));\r\n//                     } else {\r\n//                       setSelectedItems([...selectedItems, item.productId]);\r\n//                     }\r\n//                   }}\r\n//                 />\r\n//                 <img src={item.product?.image[0]} alt={item.product?.name || 'Sản phẩm'} />\r\n//                 <div className=\"cart-item-info\">\r\n//                   <h4>{item.product?.name || 'Tên sản phẩm'}</h4>\r\n//                   <p>Giá: đ{(item.product?.price || 0).toLocaleString()}</p>\r\n//                   <div className=\"quantity-control\">\r\n//                     <button>-</button>\r\n//                     <input type=\"text\" value={item.quantity} readOnly />\r\n//                     <button>+</button>\r\n//                   </div>\r\n//                   <p>Thành tiền: đ{((item.product?.price || 0) * item.quantity).toLocaleString()}</p>\r\n//                   <button className=\"btn-delete\">Xóa</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n\r\n//           <div className=\"cart-footer\">\r\n//             <div className=\"footer-left\">\r\n//               <input\r\n//                 type=\"checkbox\"\r\n//                 checked={selectedItems.length === cartItems.length}\r\n//                 onChange={() => {\r\n//                   if (selectedItems.length === cartItems.length) {\r\n//                     setSelectedItems([]);\r\n//                   } else {\r\n//                     setSelectedItems(cartItems.map(item => item.productId));\r\n//                   }\r\n//                 }}\r\n//               />\r\n//               <span>Chọn tất cả ({selectedItems.length})</span>\r\n//             </div>\r\n\r\n//             <div className=\"footer-right\">\r\n//               <p>\r\n//                 Tổng thanh toán:\r\n//                 <span> đ{totalSelectedPrice.toLocaleString()}</span>\r\n//               </p>\r\n//               <button className=\"btn-buy\">Mua hàng</button>\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };  \r\n\r\n\r\nexport const Cart = () => {\r\n  const navigate = useNavigate();\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const userData = localStorage.getItem('user');\r\n  const parsedUser = userData ? JSON.parse(userData) : null;\r\n\r\n  useEffect(() => {\r\n    if (!parsedUser) return;\r\n\r\n    const fetchCartWithProductDetails = async () => {\r\n      try {\r\n        const cartRes = await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\r\n        const cartData = cartRes.data;\r\n\r\n        const enrichedCart = await Promise.all(\r\n          cartData.map(async (item) => {\r\n            try {\r\n              const productId = item.productId._id || item.productId;\r\n              const productRes = await axios.get(`http://localhost:4003/api/product/${productId}`);\r\n              return {\r\n                ...item,\r\n                product: productRes.data\r\n              };\r\n            } catch (error) {\r\n              console.error('Lỗi lấy sản phẩm:', error);\r\n              return item;\r\n            }\r\n          })\r\n        );\r\n\r\n        setCartItems(enrichedCart);\r\n        setSelectedItems(enrichedCart.map(item => item.productId._id || item.productId));\r\n      } catch (err) {\r\n        console.error('Lỗi lấy giỏ hàng:', err);\r\n      }\r\n    };\r\n\r\n    fetchCartWithProductDetails();\r\n  }, [parsedUser?.id]);\r\n\r\n  const handleUpdateQuantity = async (cartItemId, newQuantity) => {\r\n    if (newQuantity < 1) return;\r\n\r\n    try {\r\n      await axios.put(`http://localhost:3003/api/cart/${cartItemId}`, { quantity: newQuantity });\r\n      setCartItems(prev =>\r\n        prev.map(item =>\r\n          item._id === cartItemId ? { ...item, quantity: newQuantity } : item\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error('Lỗi cập nhật số lượng:', err);\r\n    }\r\n  };\r\n\r\n  const totalSelectedPrice = cartItems\r\n    .filter(item => selectedItems.includes(item.productId._id || item.productId))\r\n    .reduce((sum, item) => sum + (item.product?.price || 0) * item.quantity, 0);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <h2>Giỏ hàng của bạn</h2>\r\n\r\n      {cartItems.length === 0 ? (\r\n        <div className=\"empty-cart\">\r\n          <p>Giỏ hàng trống</p>\r\n          <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"cart-header\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedItems.length === cartItems.length}\r\n              onChange={() => {\r\n                if (selectedItems.length === cartItems.length) {\r\n                  setSelectedItems([]);\r\n                } else {\r\n                  setSelectedItems(cartItems.map(item => item.productId._id || item.productId));\r\n                }\r\n              }}\r\n            />\r\n            <span>Chọn tất cả</span>\r\n          </div>\r\n\r\n          <div className=\"cart-items\">\r\n            {cartItems.map((item, index) => {\r\n              const productId = item.productId._id || item.productId;\r\n              return (\r\n                <div className=\"cart-item\" key={index}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedItems.includes(productId)}\r\n                    onChange={() => {\r\n                      if (selectedItems.includes(productId)) {\r\n                        setSelectedItems(selectedItems.filter(id => id !== productId));\r\n                      } else {\r\n                        setSelectedItems([...selectedItems, productId]);\r\n                      }\r\n                    }}\r\n                  />\r\n                  <img src={item.product?.image[0]} alt={item.product?.name || 'Sản phẩm'} />\r\n                  <div className=\"cart-item-info\">\r\n                    <h4>{item.product?.name || 'Tên sản phẩm'}</h4>\r\n                    <p>Giá: đ{(item.product?.price || 0).toLocaleString()}</p>\r\n                    <div className=\"quantity-control\">\r\n                      <button onClick={() => handleUpdateQuantity(item._id, item.quantity - 1)}>-</button>\r\n                      <input type=\"text\" value={item.quantity} readOnly />\r\n                      <button onClick={() => handleUpdateQuantity(item._id, item.quantity + 1)}>+</button>\r\n                    </div>\r\n                    <p>Thành tiền: đ{((item.product?.price || 0) * item.quantity).toLocaleString()}</p>\r\n                    <button className=\"btn-delete\">Xóa</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"cart-footer\">\r\n            <div className=\"footer-left\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedItems.length === cartItems.length}\r\n                onChange={() => {\r\n                  if (selectedItems.length === cartItems.length) {\r\n                    setSelectedItems([]);\r\n                  } else {\r\n                    setSelectedItems(cartItems.map(item => item.productId._id || item.productId));\r\n                  }\r\n                }}\r\n              />\r\n              <span>Chọn tất cả ({selectedItems.length})</span>\r\n            </div>\r\n\r\n            <div className=\"footer-right\">\r\n              <p>\r\n                Tổng thanh toán:\r\n                <span> đ{totalSelectedPrice.toLocaleString()}</span>\r\n              </p>\r\n              <button className=\"btn-buy\">Mua hàng</button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}