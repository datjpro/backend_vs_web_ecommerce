{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Order\\\\Order.jsx\";\n// import React, { useState, useEffect } from 'react';\n// import { useAppContext } from '../../context/AppContext';\n// import axios from 'axios';\n// import './order.css';\n\n// export const Order = () => {\n//     const { cartItems, products } = useAppContext();\n//     const [paymentMethods, setPaymentMethods] = useState([]);\n//     const [paymentMethod, setPaymentMethod] = useState('cod');\n\n//     useEffect(() => {\n//         const fetchPaymentMethods = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3008/api/paymentMethod/all');\n//                 console.log('Payment methods:', response.data);\n//                 setPaymentMethods(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching payment methods:', error);\n//             }\n//         };\n\n//         fetchPaymentMethods();\n//     }, []);\n\n//     const selectedItems = cartItems.filter(item => item.selected);\n\n//     const getProductById = (id) => products.find((p) => p._id === id);\n\n//     const totalPrice = selectedItems.reduce((acc, item) => {\n//         const prod = getProductById(item.productId);\n//         if (!prod) return acc;\n//         const price = prod.discounted_price || prod.price || 0;\n//         return acc + price * item.quantity;\n//     }, 0);\n\n//     return (\n//         <div className=\"payment-container\">\n//             <div className=\"address-section\">\n//                 <h3>Địa chỉ nhận hàng</h3>\n//                 <form className=\"address-form\">\n//                     <input type=\"text\" placeholder=\"Họ và tên\" required />\n//                     <input type=\"text\" placeholder=\"Email\" required />\n//                     <input type=\"text\" placeholder=\"Phone\" required />\n//                     <input type=\"text\" placeholder=\"Tỉnh / Thành phố\" required />\n//                     <input type=\"text\" placeholder=\"Địa chỉ chi tiết\" required />\n//                 </form>\n//             </div>\n\n//             <div className=\"payment-method-section\">\n//                 <h3>Phương thức thanh toán</h3>\n//                 <div className=\"payment-options\">\n//                     <label>\n//                         <input\n//                             type=\"radio\"\n//                             name=\"paymentMethod\"\n//                             value=\"cod\"\n//                             checked={paymentMethod === 'cod'}\n\n//                         />\n//                         Thanh toán khi nhận hàng (COD)\n//                     </label>\n//                     <label>\n//                         <input\n//                             type=\"radio\"\n//                             name=\"paymentMethod\"\n//                             value=\"bank\"\n//                             checked={paymentMethod === 'bank'}\n\n//                         />\n//                         Chuyển khoản ngân hàng\n//                     </label>\n//                     <label>\n//                         <input\n//                             type=\"radio\"\n//                             name=\"paymentMethod\"\n//                             value=\"credit\"\n//                             checked={paymentMethod === 'credit'}\n\n//                         />\n//                         Thẻ tín dụng / Ghi nợ\n//                     </label>\n//                 </div>\n\n//             </div>\n\n//             <div className=\"product-summary\">\n//                 <h3>Sản phẩm</h3>\n//                 {selectedItems.map((item, index) => {\n//                     const prod = getProductById(item.productId);\n//                     if (!prod) return null;\n\n//                     const price = prod.discounted_price || prod.price || 0;\n//                     return (\n//                         <div className=\"summary-item\" key={index}>\n//                             <img\n//                                 src={prod.img?.[0] || prod.image?.[0] || 'fallback.jpg'}\n//                                 alt={prod.name}\n//                             />\n//                             <div>\n//                                 <p>{prod.name}</p>\n//                                 <p>Số lượng: {item.quantity}</p>\n//                                 <p>Giá: đ{(price * item.quantity).toLocaleString('vi-VN')}</p>\n//                             </div>\n//                         </div>\n//                     );\n//                 })}\n//             </div>\n\n//             <div className=\"payment-summary\">\n//                 <h3>Tổng thanh toán</h3>\n//                 <p>đ{totalPrice.toLocaleString('vi-VN')}</p>\n//                 <button className=\"btn-confirm\">Đặt hàng</button>\n//             </div>\n//         </div>\n//     );\n// };\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Order = () => {\n  var _s = $RefreshSig$();\n  const OrderList = () => {\n    _s();\n    const [orders, setOrders] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    useEffect(() => {\n      const fetchOrders = async () => {\n        try {\n          const res = await axios.get('http://localhost:4000/api/order/create');\n          setOrders(res.data);\n        } catch (err) {\n          setError('Failed to fetch orders');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchOrders();\n    }, []);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 31\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Danh s\\xE1ch \\u0111\\u01A1n h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"T\\u1ED5ng ti\\u1EC1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Kh\\xE1ch h\\xE0ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Chi ti\\u1EBFt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => {\n            var _order$customerId;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [order.totalOrder.toLocaleString(), \"\\u20AB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_order$customerId = order.customerId) === null || _order$customerId === void 0 ? void 0 : _order$customerId.name) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `/orders/${order._id}`,\n                  children: \"Xem chi ti\\u1EBFt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this);\n  };\n  _s(OrderList, \"4lZA7bJOe2km13pm1zIVGzdPOWM=\");\n};\n_c = Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useEffect","useState","axios","Order","OrderList","orders","setOrders","loading","setLoading","error","setError","fetchOrders","res","get","data","err","map","order","_id","totalOrder","toLocaleString","status","customerId","name"],"sources":["D:/Ecommerce/frontend/src/components/Order/Order.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useAppContext } from '../../context/AppContext';\r\n// import axios from 'axios';\r\n// import './order.css';\r\n\r\n// export const Order = () => {\r\n//     const { cartItems, products } = useAppContext();\r\n//     const [paymentMethods, setPaymentMethods] = useState([]);\r\n//     const [paymentMethod, setPaymentMethod] = useState('cod');\r\n\r\n//     useEffect(() => {\r\n//         const fetchPaymentMethods = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:3008/api/paymentMethod/all');\r\n//                 console.log('Payment methods:', response.data);\r\n//                 setPaymentMethods(response.data);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching payment methods:', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchPaymentMethods();\r\n//     }, []);\r\n\r\n\r\n//     const selectedItems = cartItems.filter(item => item.selected);\r\n\r\n//     const getProductById = (id) => products.find((p) => p._id === id);\r\n\r\n//     const totalPrice = selectedItems.reduce((acc, item) => {\r\n//         const prod = getProductById(item.productId);\r\n//         if (!prod) return acc;\r\n//         const price = prod.discounted_price || prod.price || 0;\r\n//         return acc + price * item.quantity;\r\n//     }, 0);\r\n\r\n//     return (\r\n//         <div className=\"payment-container\">\r\n//             <div className=\"address-section\">\r\n//                 <h3>Địa chỉ nhận hàng</h3>\r\n//                 <form className=\"address-form\">\r\n//                     <input type=\"text\" placeholder=\"Họ và tên\" required />\r\n//                     <input type=\"text\" placeholder=\"Email\" required />\r\n//                     <input type=\"text\" placeholder=\"Phone\" required />\r\n//                     <input type=\"text\" placeholder=\"Tỉnh / Thành phố\" required />\r\n//                     <input type=\"text\" placeholder=\"Địa chỉ chi tiết\" required />\r\n//                 </form>\r\n//             </div>\r\n\r\n//             <div className=\"payment-method-section\">\r\n//                 <h3>Phương thức thanh toán</h3>\r\n//                 <div className=\"payment-options\">\r\n//                     <label>\r\n//                         <input\r\n//                             type=\"radio\"\r\n//                             name=\"paymentMethod\"\r\n//                             value=\"cod\"\r\n//                             checked={paymentMethod === 'cod'}\r\n         \r\n//                         />\r\n//                         Thanh toán khi nhận hàng (COD)\r\n//                     </label>\r\n//                     <label>\r\n//                         <input\r\n//                             type=\"radio\"\r\n//                             name=\"paymentMethod\"\r\n//                             value=\"bank\"\r\n//                             checked={paymentMethod === 'bank'}\r\n         \r\n//                         />\r\n//                         Chuyển khoản ngân hàng\r\n//                     </label>\r\n//                     <label>\r\n//                         <input\r\n//                             type=\"radio\"\r\n//                             name=\"paymentMethod\"\r\n//                             value=\"credit\"\r\n//                             checked={paymentMethod === 'credit'}\r\n         \r\n//                         />\r\n//                         Thẻ tín dụng / Ghi nợ\r\n//                     </label>\r\n//                 </div>\r\n\r\n//             </div>\r\n\r\n//             <div className=\"product-summary\">\r\n//                 <h3>Sản phẩm</h3>\r\n//                 {selectedItems.map((item, index) => {\r\n//                     const prod = getProductById(item.productId);\r\n//                     if (!prod) return null;\r\n\r\n//                     const price = prod.discounted_price || prod.price || 0;\r\n//                     return (\r\n//                         <div className=\"summary-item\" key={index}>\r\n//                             <img\r\n//                                 src={prod.img?.[0] || prod.image?.[0] || 'fallback.jpg'}\r\n//                                 alt={prod.name}\r\n//                             />\r\n//                             <div>\r\n//                                 <p>{prod.name}</p>\r\n//                                 <p>Số lượng: {item.quantity}</p>\r\n//                                 <p>Giá: đ{(price * item.quantity).toLocaleString('vi-VN')}</p>\r\n//                             </div>\r\n//                         </div>\r\n//                     );\r\n//                 })}\r\n//             </div>\r\n\r\n//             <div className=\"payment-summary\">\r\n//                 <h3>Tổng thanh toán</h3>\r\n//                 <p>đ{totalPrice.toLocaleString('vi-VN')}</p>\r\n//                 <button className=\"btn-confirm\">Đặt hàng</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nexport const Order = () => {\r\n    const OrderList = () => {\r\n        const [orders, setOrders] = useState([]);\r\n        const [loading, setLoading] = useState(true);\r\n        const [error, setError] = useState('');\r\n        useEffect(() => {\r\n            const fetchOrders = async () => {\r\n              try {\r\n                const res = await axios.get('http://localhost:4000/api/order/create');\r\n                setOrders(res.data);\r\n              } catch (err) {\r\n                setError('Failed to fetch orders');\r\n              } finally {\r\n                setLoading(false);\r\n              }\r\n            };\r\n            fetchOrders();\r\n          }, []);\r\n        \r\n          if (loading) return <p>Loading orders...</p>;\r\n          if (error) return <p>{error}</p>;\r\n    return (\r\n        <div>\r\n      <h2>Danh sách đơn hàng</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Tổng tiền</th>\r\n            <th>Trạng thái</th>\r\n            <th>Khách hàng</th>\r\n            <th>Chi tiết</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map(order => (\r\n            <tr key={order._id}>\r\n              <td>{order._id}</td>\r\n              <td>{order.totalOrder.toLocaleString()}₫</td>\r\n              <td>{order.status}</td>\r\n              <td>{order.customerId?.name || 'N/A'}</td>\r\n              <td>\r\n                <a href={`/orders/${order._id}`}>Xem chi tiết</a>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}