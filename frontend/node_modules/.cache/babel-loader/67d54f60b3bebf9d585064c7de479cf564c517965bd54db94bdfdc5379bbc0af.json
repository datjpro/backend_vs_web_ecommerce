{"ast":null,"code":"var _jsxFileName = \"D:\\\\aaaa\\\\Ecommerce\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport productData from \"../../src/assets/data/product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [product, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = (productId, quantity) => {\n    setCartItems(prev => {\n      const exist = prev.find(item => item.productId === productId);\n      if (exist) {\n        return prev.map(item => item.productId === productId ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        return [...prev, {\n          productId,\n          quantity\n        }];\n      }\n    });\n  };\n  const fetchProduct = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4003/api/product/all\"); // Thay URL bằng endpoint API của bạn\n      const data = await response.json();\n      setProducts(data); // Cập nhật state với dữ liệu từ API\n    } catch (error) {\n      console.error(\"Failed to fetch products:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProduct();\n  }, []);\n  const value = {\n    navigate,\n    product,\n    cartItems,\n    setCartItems,\n    addToCart\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(AppContextProvider, \"hb8oBXpu3q9hDDFrS5r8zeGKTmo=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContextProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","productData","AppContext","AppContextProvider","children","navigate","product","setProducts","cartItems","setCartItems","addToCart","productId","quantity","prev","exist","find","item","map","fetchProduct","response","fetch","data","json","error","console","value","useAppContext"],"sources":["D:/aaaa/Ecommerce/frontend/src/context/AppContext.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport productData from \"../../src/assets/data/product\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  const [product, setProducts] = useState([]);\r\n\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const addToCart = (productId, quantity) => {\r\n    setCartItems((prev) => {\r\n      const exist = prev.find((item) => item.productId === productId);\r\n      if (exist) {\r\n        return prev.map((item) =>\r\n          item.productId === productId\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prev, { productId, quantity }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const fetchProduct = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:4003/api/product/all\"); // Thay URL bằng endpoint API của bạn\r\n      const data = await response.json();\r\n      setProducts(data); // Cập nhật state với dữ liệu từ API\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch products:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProduct();\r\n  }, []);\r\n\r\n  const value = { navigate, product, cartItems, setCartItems, addToCart };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAExD,OAAO,MAAMC,UAAU,gBAAGN,aAAa,EAAE;AAEzC,OAAO,MAAMO,kBAAkB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC7C,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAM,CAACM,OAAO,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,SAAS,GAAG,CAACC,SAAS,EAAEC,QAAQ,KAAK;IACzCH,YAAY,CAAEI,IAAI,IAAK;MACrB,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,SAAS,KAAKA,SAAS,CAAC;MAC/D,IAAIG,KAAK,EAAE;QACT,OAAOD,IAAI,CAACI,GAAG,CAAED,IAAI,IACnBA,IAAI,CAACL,SAAS,KAAKA,SAAS,GACxB;UAAE,GAAGK,IAAI;UAAEJ,QAAQ,EAAEI,IAAI,CAACJ,QAAQ,GAAGA;QAAS,CAAC,GAC/CI,IAAI,CACT;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,IAAI,EAAE;UAAEF,SAAS;UAAEC;QAAS,CAAC,CAAC;MAC3C;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC,CAAC,CAAC;MACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCf,WAAW,CAACc,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACdoB,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG;IAAEpB,QAAQ;IAAEC,OAAO;IAAEE,SAAS;IAAEC,YAAY;IAAEC;EAAU,CAAC;EAEvE,oBAAO,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAEe,KAAM;IAAA,UAAErB;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAuB;AAC5E,CAAC;AAAC,GAtCWD,kBAAkB;EAAA,QACZH,WAAW;AAAA;AAAA,KADjBG,kBAAkB;AAwC/B,OAAO,MAAMuB,aAAa,GAAG;EAAA;EAAA,OAAM7B,UAAU,CAACK,UAAU,CAAC;AAAA;AAAC,IAA7CwB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}