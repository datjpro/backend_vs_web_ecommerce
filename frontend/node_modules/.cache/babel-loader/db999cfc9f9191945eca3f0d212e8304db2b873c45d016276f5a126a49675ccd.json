{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Cart\\\\Cart.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './cart.css';\n\n// export const Cart = () => {\n//   const navigate = useNavigate();\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedItems, setSelectedItems] = useState([]);\n//   const userData = localStorage.getItem('user');\n//   const parsedUser = userData ? JSON.parse(userData) : null;\n//   useEffect(() => {\n//   if (!parsedUser) return;\n\n//   const fetchCartWithProductDetails = async () => {\n//     try {\n//       const cartRes = await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\n//       const cartData = cartRes.data;\n\n//       const enrichedCart = await Promise.all(\n//         cartData.map(async (item) => {\n//           try {\n//             const productRes = await axios.get(`http://localhost:4003/api/product/${item.productId}`);\n//             return {\n//               ...item,\n//               product: productRes.data\n//             };\n//           } catch (error) {\n//             console.error('Lỗi lấy sản phẩm:', error);\n//             return item;\n//           }\n//         })\n//       );\n\n//       setCartItems(enrichedCart);\n//       setSelectedItems(enrichedCart.map(item => item.productId));\n//     } catch (err) {\n//       console.error('Lỗi lấy giỏ hàng:', err);\n//     }\n//   };\n\n//   fetchCartWithProductDetails();\n// }, [parsedUser?.id]);  // Điều kiện chỉ chạy khi parsedUser.id thay đổi\n\n//   const totalSelectedPrice = cartItems\n//     .filter(item => selectedItems.includes(item.productId))\n//     .reduce((sum, item) => sum + (item.product?.price || 0) * item.quantity, 0);\n\n//   return (\n//     <div className=\"cart\">\n//       <h2>Giỏ hàng của bạn</h2>\n\n//       {cartItems.length === 0 ? (\n//         <div className=\"empty-cart\">\n//           <p>Giỏ hàng trống</p>\n//           <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\n//         </div>\n//       ) : (\n//         <>\n//           <div className=\"cart-header\">\n//             <input\n//               type=\"checkbox\"\n//               checked={selectedItems.length === cartItems.length}\n//               onChange={() => {\n//                 if (selectedItems.length === cartItems.length) {\n//                   setSelectedItems([]);\n//                 } else {\n//                   setSelectedItems(cartItems.map(item => item.productId));\n//                 }\n//               }}\n//             />\n//             <span>Chọn tất cả</span>\n//           </div>\n\n//           <div className=\"cart-items\">\n//             {cartItems.map((item, index) => (\n//               <div className=\"cart-item\" key={index}>\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={selectedItems.includes(item.productId)}\n//                   onChange={() => {\n//                     if (selectedItems.includes(item.productId)) {\n//                       setSelectedItems(selectedItems.filter(id => id !== item.productId));\n//                     } else {\n//                       setSelectedItems([...selectedItems, item.productId]);\n//                     }\n//                   }}\n//                 />\n//                 <img src={item.product?.image[0]} alt={item.product?.name || 'Sản phẩm'} />\n//                 <div className=\"cart-item-info\">\n//                   <h4>{item.product?.name || 'Tên sản phẩm'}</h4>\n//                   <p>Giá: đ{(item.product?.price || 0).toLocaleString()}</p>\n//                   <div className=\"quantity-control\">\n//                     <button>-</button>\n//                     <input type=\"text\" value={item.quantity} readOnly />\n//                     <button>+</button>\n//                   </div>\n//                   <p>Thành tiền: đ{((item.product?.price || 0) * item.quantity).toLocaleString()}</p>\n//                   <button className=\"btn-delete\">Xóa</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n\n//           <div className=\"cart-footer\">\n//             <div className=\"footer-left\">\n//               <input\n//                 type=\"checkbox\"\n//                 checked={selectedItems.length === cartItems.length}\n//                 onChange={() => {\n//                   if (selectedItems.length === cartItems.length) {\n//                     setSelectedItems([]);\n//                   } else {\n//                     setSelectedItems(cartItems.map(item => item.productId));\n//                   }\n//                 }}\n//               />\n//               <span>Chọn tất cả ({selectedItems.length})</span>\n//             </div>\n\n//             <div className=\"footer-right\">\n//               <p>\n//                 Tổng thanh toán:\n//                 <span> đ{totalSelectedPrice.toLocaleString()}</span>\n//               </p>\n//               <button className=\"btn-buy\">Mua hàng</button>\n//             </div>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Cart = () => {\n  _s();\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const userData = localStorage.getItem('user');\n  const parsedUser = userData ? JSON.parse(userData) : null;\n  //   useEffect(() => {\n  //   if (!parsedUser) return;\n\n  //   const fetchCartWithProductDetails = async () => {\n  //     try {\n  //       const cartRes =await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\n  //       const cartData = cartRes.data;\n\n  //       const enrichedCart = await Promise.all(\n  //         cartData.map(async (item) => {\n  //           try {\n  //             const productRes = await axios.get(`http://localhost:4003/api/product/${item.productId}`);\n  //             return {\n  //               ...item,\n  //               product: productRes.data\n  //             };\n  //           } catch (error) {\n  //             console.error('Lỗi lấy sản phẩm:', error);\n  //             return item;\n  //           }\n  //         })\n  //       );\n\n  //       setCartItems(enrichedCart);\n  //       setSelectedItems(enrichedCart.map(item => item.productId));\n  //     } catch (err) {\n  //       console.error('Lỗi lấy giỏ hàng:', err);\n  //     }\n  //   };\n\n  //   fetchCartWithProductDetails();\n  // }, [parsedUser?.id]);  // Điều kiện chỉ chạy khi parsedUser.id thay đổi\n\n  useEffect(() => {\n    const fakeCart = [{\n      productId: \"123456\",\n      quantity: 1,\n      product: {\n        name: \"Test Product\",\n        price: 100000,\n        image: [\"https://via.placeholder.com/150\"]\n      }\n    }];\n    setCartItems(fakeCart);\n    setSelectedItems([\"123456\"]);\n  }, []);\n  const totalSelectedPrice = cartItems.filter(item => selectedItems.includes(item.productId)).reduce((sum, item) => {\n    var _item$product;\n    return sum + (((_item$product = item.product) === null || _item$product === void 0 ? void 0 : _item$product.price) || 0) * item.quantity;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gi\\u1ECF h\\xE0ng c\\u1EE7a b\\u1EA1n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Gi\\u1ECF h\\xE0ng tr\\u1ED1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn-continue\",\n        children: \"Ti\\u1EBFp t\\u1EE5c mua s\\u1EAFm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedItems.length === cartItems.length,\n          onChange: () => {\n            if (selectedItems.length === cartItems.length) {\n              setSelectedItems([]);\n            } else {\n              setSelectedItems(cartItems.map(item => item.productId));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Ch\\u1ECDn t\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-items\",\n        children: cartItems.map((item, index) => {\n          var _item$product2, _item$product3, _item$product4, _item$product5, _item$product6;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedItems.includes(item.productId),\n              onChange: () => {\n                if (selectedItems.includes(item.productId)) {\n                  setSelectedItems(selectedItems.filter(id => id !== item.productId));\n                } else {\n                  setSelectedItems([...selectedItems, item.productId]);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_item$product2 = item.product) === null || _item$product2 === void 0 ? void 0 : _item$product2.image[0],\n              alt: ((_item$product3 = item.product) === null || _item$product3 === void 0 ? void 0 : _item$product3.name) || 'Sản phẩm'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: ((_item$product4 = item.product) === null || _item$product4 === void 0 ? void 0 : _item$product4.name) || 'Tên sản phẩm'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Gi\\xE1: \\u0111\", (((_item$product5 = item.product) === null || _item$product5 === void 0 ? void 0 : _item$product5.price) || 0).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quantity-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.quantity,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\xE0nh ti\\u1EC1n: \\u0111\", ((((_item$product6 = item.product) === null || _item$product6 === void 0 ? void 0 : _item$product6.price) || 0) * item.quantity).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete\",\n                children: \"X\\xF3a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedItems.length === cartItems.length,\n            onChange: () => {\n              if (selectedItems.length === cartItems.length) {\n                setSelectedItems([]);\n              } else {\n                setSelectedItems(cartItems.map(item => item.productId));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Ch\\u1ECDn t\\u1EA5t c\\u1EA3 (\", selectedItems.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"T\\u1ED5ng thanh to\\xE1n:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u0111\", totalSelectedPrice.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-buy\",\n            children: \"Mua h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"ceyU/Etxg+t4d61lxEKa1A2MqsA=\", false, function () {\n  return [useNavigate];\n});\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","Cart","navigate","cartItems","setCartItems","selectedItems","setSelectedItems","userData","localStorage","getItem","parsedUser","JSON","parse","fakeCart","productId","quantity","product","name","price","image","totalSelectedPrice","filter","item","includes","reduce","sum","length","map","index","id","toLocaleString"],"sources":["D:/Ecommerce/frontend/src/components/Cart/Cart.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './cart.css';\r\n\r\n// export const Cart = () => {\r\n//   const navigate = useNavigate();\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const [selectedItems, setSelectedItems] = useState([]);\r\n//   const userData = localStorage.getItem('user');\r\n//   const parsedUser = userData ? JSON.parse(userData) : null;\r\n//   useEffect(() => {\r\n//   if (!parsedUser) return;\r\n\r\n//   const fetchCartWithProductDetails = async () => {\r\n//     try {\r\n//       const cartRes = await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\r\n//       const cartData = cartRes.data;\r\n\r\n//       const enrichedCart = await Promise.all(\r\n//         cartData.map(async (item) => {\r\n//           try {\r\n//             const productRes = await axios.get(`http://localhost:4003/api/product/${item.productId}`);\r\n//             return {\r\n//               ...item,\r\n//               product: productRes.data\r\n//             };\r\n//           } catch (error) {\r\n//             console.error('Lỗi lấy sản phẩm:', error);\r\n//             return item;\r\n//           }\r\n//         })\r\n//       );\r\n\r\n//       setCartItems(enrichedCart);\r\n//       setSelectedItems(enrichedCart.map(item => item.productId));\r\n//     } catch (err) {\r\n//       console.error('Lỗi lấy giỏ hàng:', err);\r\n//     }\r\n//   };\r\n\r\n//   fetchCartWithProductDetails();\r\n// }, [parsedUser?.id]);  // Điều kiện chỉ chạy khi parsedUser.id thay đổi\r\n\r\n\r\n//   const totalSelectedPrice = cartItems\r\n//     .filter(item => selectedItems.includes(item.productId))\r\n//     .reduce((sum, item) => sum + (item.product?.price || 0) * item.quantity, 0);\r\n\r\n//   return (\r\n//     <div className=\"cart\">\r\n//       <h2>Giỏ hàng của bạn</h2>\r\n\r\n//       {cartItems.length === 0 ? (\r\n//         <div className=\"empty-cart\">\r\n//           <p>Giỏ hàng trống</p>\r\n//           <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           <div className=\"cart-header\">\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               checked={selectedItems.length === cartItems.length}\r\n//               onChange={() => {\r\n//                 if (selectedItems.length === cartItems.length) {\r\n//                   setSelectedItems([]);\r\n//                 } else {\r\n//                   setSelectedItems(cartItems.map(item => item.productId));\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <span>Chọn tất cả</span>\r\n//           </div>\r\n\r\n//           <div className=\"cart-items\">\r\n//             {cartItems.map((item, index) => (\r\n//               <div className=\"cart-item\" key={index}>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={selectedItems.includes(item.productId)}\r\n//                   onChange={() => {\r\n//                     if (selectedItems.includes(item.productId)) {\r\n//                       setSelectedItems(selectedItems.filter(id => id !== item.productId));\r\n//                     } else {\r\n//                       setSelectedItems([...selectedItems, item.productId]);\r\n//                     }\r\n//                   }}\r\n//                 />\r\n//                 <img src={item.product?.image[0]} alt={item.product?.name || 'Sản phẩm'} />\r\n//                 <div className=\"cart-item-info\">\r\n//                   <h4>{item.product?.name || 'Tên sản phẩm'}</h4>\r\n//                   <p>Giá: đ{(item.product?.price || 0).toLocaleString()}</p>\r\n//                   <div className=\"quantity-control\">\r\n//                     <button>-</button>\r\n//                     <input type=\"text\" value={item.quantity} readOnly />\r\n//                     <button>+</button>\r\n//                   </div>\r\n//                   <p>Thành tiền: đ{((item.product?.price || 0) * item.quantity).toLocaleString()}</p>\r\n//                   <button className=\"btn-delete\">Xóa</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n\r\n//           <div className=\"cart-footer\">\r\n//             <div className=\"footer-left\">\r\n//               <input\r\n//                 type=\"checkbox\"\r\n//                 checked={selectedItems.length === cartItems.length}\r\n//                 onChange={() => {\r\n//                   if (selectedItems.length === cartItems.length) {\r\n//                     setSelectedItems([]);\r\n//                   } else {\r\n//                     setSelectedItems(cartItems.map(item => item.productId));\r\n//                   }\r\n//                 }}\r\n//               />\r\n//               <span>Chọn tất cả ({selectedItems.length})</span>\r\n//             </div>\r\n\r\n//             <div className=\"footer-right\">\r\n//               <p>\r\n//                 Tổng thanh toán:\r\n//                 <span> đ{totalSelectedPrice.toLocaleString()}</span>\r\n//               </p>\r\n//               <button className=\"btn-buy\">Mua hàng</button>\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './cart.css';\r\n\r\nexport const Cart = () => {\r\n  const navigate = useNavigate();\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const userData = localStorage.getItem('user');\r\n  const parsedUser = userData ? JSON.parse(userData) : null;\r\n//   useEffect(() => {\r\n//   if (!parsedUser) return;\r\n\r\n//   const fetchCartWithProductDetails = async () => {\r\n//     try {\r\n//       const cartRes =await axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`);\r\n//       const cartData = cartRes.data;\r\n\r\n//       const enrichedCart = await Promise.all(\r\n//         cartData.map(async (item) => {\r\n//           try {\r\n//             const productRes = await axios.get(`http://localhost:4003/api/product/${item.productId}`);\r\n//             return {\r\n//               ...item,\r\n//               product: productRes.data\r\n//             };\r\n//           } catch (error) {\r\n//             console.error('Lỗi lấy sản phẩm:', error);\r\n//             return item;\r\n//           }\r\n//         })\r\n//       );\r\n\r\n//       setCartItems(enrichedCart);\r\n//       setSelectedItems(enrichedCart.map(item => item.productId));\r\n//     } catch (err) {\r\n//       console.error('Lỗi lấy giỏ hàng:', err);\r\n//     }\r\n//   };\r\n\r\n//   fetchCartWithProductDetails();\r\n// }, [parsedUser?.id]);  // Điều kiện chỉ chạy khi parsedUser.id thay đổi\r\n\r\nuseEffect(() => {\r\n  const fakeCart = [\r\n    {\r\n      productId: \"123456\",\r\n      quantity: 1,\r\n      product: {\r\n        name: \"Test Product\",\r\n        price: 100000,\r\n        image: [\"https://via.placeholder.com/150\"]\r\n      }\r\n    }\r\n  ];\r\n  setCartItems(fakeCart);\r\n  setSelectedItems([\"123456\"]);\r\n}, []);\r\n  const totalSelectedPrice = cartItems\r\n    .filter(item => selectedItems.includes(item.productId))\r\n    .reduce((sum, item) => sum + (item.product?.price || 0) * item.quantity, 0);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <h2>Giỏ hàng của bạn</h2>\r\n\r\n      {cartItems.length === 0 ? (\r\n        <div className=\"empty-cart\">\r\n          <p>Giỏ hàng trống</p>\r\n          <Link to=\"/\" className=\"btn-continue\">Tiếp tục mua sắm</Link>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"cart-header\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedItems.length === cartItems.length}\r\n              onChange={() => {\r\n                if (selectedItems.length === cartItems.length) {\r\n                  setSelectedItems([]);\r\n                } else {\r\n                  setSelectedItems(cartItems.map(item => item.productId));\r\n                }\r\n              }}\r\n            />\r\n            <span>Chọn tất cả</span>\r\n          </div>\r\n\r\n          <div className=\"cart-items\">\r\n            {cartItems.map((item, index) => (\r\n              <div className=\"cart-item\" key={index}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedItems.includes(item.productId)}\r\n                  onChange={() => {\r\n                    if (selectedItems.includes(item.productId)) {\r\n                      setSelectedItems(selectedItems.filter(id => id !== item.productId));\r\n                    } else {\r\n                      setSelectedItems([...selectedItems, item.productId]);\r\n                    }\r\n                  }}\r\n                />\r\n                <img src={item.product?.image[0]} alt={item.product?.name || 'Sản phẩm'} />\r\n                <div className=\"cart-item-info\">\r\n                  <h4>{item.product?.name || 'Tên sản phẩm'}</h4>\r\n                  <p>Giá: đ{(item.product?.price || 0).toLocaleString()}</p>\r\n                  <div className=\"quantity-control\">\r\n                    <button>-</button>\r\n                    <input type=\"text\" value={item.quantity} readOnly />\r\n                    <button>+</button>\r\n                  </div>\r\n                  <p>Thành tiền: đ{((item.product?.price || 0) * item.quantity).toLocaleString()}</p>\r\n                  <button className=\"btn-delete\">Xóa</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"cart-footer\">\r\n            <div className=\"footer-left\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedItems.length === cartItems.length}\r\n                onChange={() => {\r\n                  if (selectedItems.length === cartItems.length) {\r\n                    setSelectedItems([]);\r\n                  } else {\r\n                    setSelectedItems(cartItems.map(item => item.productId));\r\n                  }\r\n                }}\r\n              />\r\n              <span>Chọn tất cả ({selectedItems.length})</span>\r\n            </div>\r\n\r\n            <div className=\"footer-right\">\r\n              <p>\r\n                Tổng thanh toán:\r\n                <span> đ{totalSelectedPrice.toLocaleString()}</span>\r\n              </p>\r\n              <button className=\"btn-buy\">Mua hàng</button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};  "],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC;AAAA;AAEpB,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;EACxB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMW,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC7C,MAAMC,UAAU,GAAGH,QAAQ,GAAGI,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,GAAG,IAAI;EAC3D;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}