{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useAppContext } from '../../context/AppContext';\n// import axios from 'axios';\n// import './order.css';\n\n// export const Order = () => {\n//   const { user } = useAppContext();\n//   const [cartItems, setCartItems] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [shippingInfo, setShippingInfo] = useState({\n//     name: '',\n//     phone: '',\n//     province: '',\n//     address: '',\n//   });\n//   const [paymentMethod, setPaymentMethod] = useState('');\n//   const [transportMethod, setTransportMethod] = useState('');\n//   const [totalAmount, setTotalAmount] = useState(0);\n\n//   const transportCosts = {\n//     GHN: 35000,\n//     GHTK: 30000,\n//     ViettelPost: 25000,\n//   };\n\n//   useEffect(() => {\n//     const fetchCart = async () => {\n//       try {\n//         const res = await axios.get(`http://localhost:3003/api/cart/user/${user.id}`);\n//         setCartItems(res.data);\n//         const total = res.data.reduce(\n//           (total, item) => total + item.quantity * item.productId.price, 0\n//         );\n//         setTotalAmount(total);\n//       } catch (error) {\n//         console.error('Lỗi khi lấy giỏ hàng:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     if (user?.id) {\n//       fetchCart();\n//     }\n//   }, [user]);\n//   const updateTotalAmount = (newTransportMethod) => {\n//     const transportCost = transportCosts[newTransportMethod] || 0;\n//     const newTotalAmount = cartItems.reduce(\n//       (total, item) => total + item.quantity * item.productId.price, 0\n//     ) + transportCost;\n//     setTotalAmount(newTotalAmount);\n//   };\n\n//   const handleTransportChange = (e) => {\n//     setTransportMethod(e.target.value);\n//     updateTotalAmount(e.target.value);\n//   };\n\n//   const handleOrderSubmit = async () => {\n//   try {\n//     const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\n//     const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\n\n//     const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\n//     const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\n\n//     console.log(\"Payment ID:\", paymentData?._id);\n//     console.log(\"Transport ID:\", transportData?._id);\n\n//     if (!paymentData?._id || !transportData?._id) {\n//       alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\n//       return;\n//     }\n\n//     const orderData = {\n//       totalOrder: totalAmount,\n//       customerId: user.id,\n//       paymentId: paymentData._id,\n//       shippingInfo,\n//       transportId: transportData._id,\n//       status: 'pending',\n//       userId: user.id\n//     };\n\n//     const res = await axios.post('http://localhost:4000/api/order/create', orderData);\n//     alert('Đặt hàng thành công!');\n//   } catch (error) {\n//     console.error('Lỗi khi tạo đơn hàng:', error);\n//     alert('Đặt hàng không thành công');\n//   }\n// };\n\n//   return (\n//     <div className=\"payment-container\">\n//       <div className=\"address-section\">\n//         <h3>Địa chỉ nhận hàng</h3>\n//         <form className=\"address-form\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Họ và tên\"\n//             name=\"name\"\n//             value={shippingInfo.name}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })}\n//             required\n//           />\n//           <input\n//             type=\"number\"\n//             placeholder=\"Phone\"\n//             name=\"phone\"\n//             value={shippingInfo.phone}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Tỉnh / Thành phố\"\n//             name=\"province\"\n//             value={shippingInfo.province}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Địa chỉ chi tiết\"\n//             name=\"address\"\n//             value={shippingInfo.address}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })}\n//             required\n//           />\n//         </form>\n//       </div>\n\n//       <div className=\"payment-method-section\">\n//         <h3>Phương thức thanh toán</h3>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"paymentMethod\"\n//             value=\"cod\"\n//             onChange={(e) => setPaymentMethod(e.target.value)}\n//           />\n//           Thanh toán khi nhận hàng (COD)\n//         </label>\n//       </div>\n\n//       <div className=\"transport-method\">\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"transportMethod\"\n//             value=\"GHN\"\n//             onChange={handleTransportChange}\n//           />\n//           GHN: 35000 Đ\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"transportMethod\"\n//             value=\"GHTK\"\n//             onChange={handleTransportChange}\n//           />\n//           GHTK: 30000 Đ\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"transportMethod\"\n//             value=\"ViettelPost\"\n//             onChange={handleTransportChange}\n//           />\n//           Viettel Post: 25000 Đ\n//         </label>\n//       </div>\n\n//       <div className=\"product-summary\">\n//         <h3>Sản phẩm</h3>\n//         {loading ? (\n//           <p>Đang tải...</p>\n//         ) : cartItems.length === 0 ? (\n//           <p>Giỏ hàng trống</p>\n//         ) : (\n//           cartItems.map((item) => (\n//             <div className=\"summary-item\" key={item._id}>\n//               <img src={item.productId.image[0]} alt={item.productId.name} />\n//               <div>\n//                 <p>{item.productId.name}</p>\n//                 <p>Số lượng: {item.quantity}</p>\n//                 <p>Giá: {item.productId.price.toLocaleString()} đ</p>\n//               </div>\n//             </div>\n//           ))\n//         )}\n//       </div>\n\n//       <div className=\"payment-summary\">\n//         <h3>Tổng thanh toán</h3>\n//         <p>{totalAmount.toLocaleString()} đ</p>\n//         <button className=\"btn-confirm\" onClick={handleOrderSubmit}>Đặt hàng</button>\n//       </div>\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["D:/Ecommerce/frontend/src/components/Order/Order.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useAppContext } from '../../context/AppContext';\r\n// import axios from 'axios';\r\n// import './order.css';\r\n\r\n// export const Order = () => {\r\n//   const { user } = useAppContext();\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [shippingInfo, setShippingInfo] = useState({\r\n//     name: '',\r\n//     phone: '',\r\n//     province: '',\r\n//     address: '',\r\n//   });\r\n//   const [paymentMethod, setPaymentMethod] = useState('');\r\n//   const [transportMethod, setTransportMethod] = useState('');\r\n//   const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n//   const transportCosts = {\r\n//     GHN: 35000,\r\n//     GHTK: 30000,\r\n//     ViettelPost: 25000,\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchCart = async () => {\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:3003/api/cart/user/${user.id}`);\r\n//         setCartItems(res.data);\r\n//         const total = res.data.reduce(\r\n//           (total, item) => total + item.quantity * item.productId.price, 0\r\n//         );\r\n//         setTotalAmount(total);\r\n//       } catch (error) {\r\n//         console.error('Lỗi khi lấy giỏ hàng:', error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     if (user?.id) {\r\n//       fetchCart();\r\n//     }\r\n//   }, [user]);\r\n//   const updateTotalAmount = (newTransportMethod) => {\r\n//     const transportCost = transportCosts[newTransportMethod] || 0;\r\n//     const newTotalAmount = cartItems.reduce(\r\n//       (total, item) => total + item.quantity * item.productId.price, 0\r\n//     ) + transportCost;\r\n//     setTotalAmount(newTotalAmount);\r\n//   };\r\n\r\n//   const handleTransportChange = (e) => {\r\n//     setTransportMethod(e.target.value);\r\n//     updateTotalAmount(e.target.value);\r\n//   };\r\n\r\n\r\n//   const handleOrderSubmit = async () => {\r\n//   try {\r\n//     const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\r\n//     const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\r\n\r\n//     const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\r\n//     const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\r\n\r\n//     console.log(\"Payment ID:\", paymentData?._id);\r\n//     console.log(\"Transport ID:\", transportData?._id);\r\n\r\n//     if (!paymentData?._id || !transportData?._id) {\r\n//       alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\r\n//       return;\r\n//     }\r\n\r\n//     const orderData = {\r\n//       totalOrder: totalAmount,\r\n//       customerId: user.id,\r\n//       paymentId: paymentData._id,\r\n//       shippingInfo,\r\n//       transportId: transportData._id,\r\n//       status: 'pending',\r\n//       userId: user.id\r\n//     };\r\n\r\n//     const res = await axios.post('http://localhost:4000/api/order/create', orderData);\r\n//     alert('Đặt hàng thành công!');\r\n//   } catch (error) {\r\n//     console.error('Lỗi khi tạo đơn hàng:', error);\r\n//     alert('Đặt hàng không thành công');\r\n//   }\r\n// };\r\n\r\n//   return (\r\n//     <div className=\"payment-container\">\r\n//       <div className=\"address-section\">\r\n//         <h3>Địa chỉ nhận hàng</h3>\r\n//         <form className=\"address-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Họ và tên\"\r\n//             name=\"name\"\r\n//             value={shippingInfo.name}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Phone\"\r\n//             name=\"phone\"\r\n//             value={shippingInfo.phone}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Tỉnh / Thành phố\"\r\n//             name=\"province\"\r\n//             value={shippingInfo.province}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Địa chỉ chi tiết\"\r\n//             name=\"address\"\r\n//             value={shippingInfo.address}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })}\r\n//             required\r\n//           />\r\n//         </form>\r\n//       </div>\r\n\r\n//       <div className=\"payment-method-section\">\r\n//         <h3>Phương thức thanh toán</h3>\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"paymentMethod\"\r\n//             value=\"cod\"\r\n//             onChange={(e) => setPaymentMethod(e.target.value)}\r\n//           />\r\n//           Thanh toán khi nhận hàng (COD)\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div className=\"transport-method\">\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"transportMethod\"\r\n//             value=\"GHN\"\r\n//             onChange={handleTransportChange}\r\n//           />\r\n//           GHN: 35000 Đ\r\n//         </label>\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"transportMethod\"\r\n//             value=\"GHTK\"\r\n//             onChange={handleTransportChange}\r\n//           />\r\n//           GHTK: 30000 Đ\r\n//         </label>\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"transportMethod\"\r\n//             value=\"ViettelPost\"\r\n//             onChange={handleTransportChange}\r\n//           />\r\n//           Viettel Post: 25000 Đ\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div className=\"product-summary\">\r\n//         <h3>Sản phẩm</h3>\r\n//         {loading ? (\r\n//           <p>Đang tải...</p>\r\n//         ) : cartItems.length === 0 ? (\r\n//           <p>Giỏ hàng trống</p>\r\n//         ) : (\r\n//           cartItems.map((item) => (\r\n//             <div className=\"summary-item\" key={item._id}>\r\n//               <img src={item.productId.image[0]} alt={item.productId.name} />\r\n//               <div>\r\n//                 <p>{item.productId.name}</p>\r\n//                 <p>Số lượng: {item.quantity}</p>\r\n//                 <p>Giá: {item.productId.price.toLocaleString()} đ</p>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         )}\r\n//       </div>\r\n\r\n//       <div className=\"payment-summary\">\r\n//         <h3>Tổng thanh toán</h3>\r\n//         <p>{totalAmount.toLocaleString()} đ</p>\r\n//         <button className=\"btn-confirm\" onClick={handleOrderSubmit}>Đặt hàng</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}