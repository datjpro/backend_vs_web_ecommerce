{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AppContext.jsx\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport productData from '../../src/assets/data/product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [customer, setCustomer] = useState(null);\n  const navigate = useNavigate();\n  const [product, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = (productId, quantity) => {\n    setCartItems(prev => {\n      const exist = prev.find(item => item.productId === productId);\n      if (exist) {\n        return prev.map(item => item.productId === productId ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        return [...prev, {\n          productId,\n          quantity\n        }];\n      }\n    });\n  };\n  const fetchProduct = async () => {\n    setProducts(productData);\n  };\n  useEffect(() => {\n    fetchProduct();\n    const savedCustomer = localStorage.getItem('customer');\n    if (savedCustomer) {\n      setCustomer(JSON.parse(savedCustomer));\n    }\n  }, []);\n  const value = {\n    navigate,\n    product,\n    cartItems,\n    setCartItems,\n    addToCart,\n    customer,\n    setCustomer\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s(AppContextProvider, \"gNnSPUXXLfRGoabjB+AoJNp+KaE=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContextProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","productData","AppContext","AppContextProvider","children","customer","setCustomer","navigate","product","setProducts","cartItems","setCartItems","addToCart","productId","quantity","prev","exist","find","item","map","fetchProduct","savedCustomer","localStorage","getItem","JSON","parse","value","useAppContext"],"sources":["D:/Ecommerce/frontend/src/context/AppContext.jsx"],"sourcesContent":["// src/context/AppContext.jsx\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport productData from '../../src/assets/data/product';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [customer, setCustomer] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [product, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const addToCart = (productId, quantity) => {\r\n    setCartItems(prev => {\r\n      const exist = prev.find(item => item.productId === productId);\r\n      if (exist) {\r\n        return prev.map(item =>\r\n          item.productId === productId\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prev, { productId, quantity }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const fetchProduct = async () => {\r\n    setProducts(productData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProduct();\r\n\r\n    const savedCustomer = localStorage.getItem('customer');\r\n    if (savedCustomer) {\r\n      setCustomer(JSON.parse(savedCustomer));\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    navigate,\r\n    product,\r\n    cartItems,\r\n    setCartItems,\r\n    addToCart,\r\n    customer,\r\n    setCustomer\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAExD,OAAO,MAAMC,UAAU,gBAAGN,aAAa,EAAE;AAEzC,OAAO,MAAMO,kBAAkB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMQ,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM,CAACQ,OAAO,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMa,SAAS,GAAG,CAACC,SAAS,EAAEC,QAAQ,KAAK;IACzCH,YAAY,CAACI,IAAI,IAAI;MACnB,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS,CAAC;MAC7D,IAAIG,KAAK,EAAE;QACT,OAAOD,IAAI,CAACI,GAAG,CAACD,IAAI,IAClBA,IAAI,CAACL,SAAS,KAAKA,SAAS,GACxB;UAAE,GAAGK,IAAI;UAAEJ,QAAQ,EAAEI,IAAI,CAACJ,QAAQ,GAAGA;QAAS,CAAC,GAC/CI,IAAI,CACT;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,IAAI,EAAE;UAAEF,SAAS;UAAEC;QAAS,CAAC,CAAC;MAC3C;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,YAAY,GAAG,YAAY;IAC/BX,WAAW,CAACR,WAAW,CAAC;EAC1B,CAAC;EAEDH,SAAS,CAAC,MAAM;IACdsB,YAAY,EAAE;IAEd,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACjBf,WAAW,CAACkB,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG;IACZnB,QAAQ;IACRC,OAAO;IACPE,SAAS;IACTC,YAAY;IACZC,SAAS;IACTP,QAAQ;IACRC;EACF,CAAC;EAED,oBAAO,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAEoB,KAAM;IAAA,UAAEtB;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAuB;AAC5E,CAAC;AAAC,GA7CWD,kBAAkB;EAAA,QAEZH,WAAW;AAAA;AAAA,KAFjBG,kBAAkB;AA+C/B,OAAO,MAAMwB,aAAa,GAAG;EAAA;EAAA,OAAM9B,UAAU,CAACK,UAAU,CAAC;AAAA;AAAC,IAA7CyB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}