{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Admin\\\\CategoryAdmin.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './categoryAdmin.css';\n// import { useAppContext } from '../../context/AppContext';\n\n// export const CategoryAdmin = () => {\n//     const { token } = useAppContext();\n\n//     // State\n//     const [categories, setCategories] = useState([]);\n//     const [error, setError] = useState('');\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [selectedFile, setSelectedFile] = useState(null);\n//     const [editingId, setEditingId] = useState(null);\n//     const [sortOrder, setSortOrder] = useState('asc');\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     const fetchCategories = async () => {\n//         try {\n//             const res = await axios.get('http://localhost:3001/api/category/all');\n//             setCategories(res.data || []);\n//             setError('');\n//         } catch (err) {\n//             console.error('Lỗi khi lấy dữ liệu:', err.message);\n//             setError('Không thể lấy danh mục.');\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchCategories();\n//     }, []);\n\n//     // Hàm gọi API tìm kiếm danh mục theo tên\n//     const handleSearch = async () => {\n//         if (!searchTerm.trim()) {\n//             fetchCategories(); // Nếu ô tìm kiếm rỗng thì load lại tất cả\n//             return;\n//         }\n//         try {\n//             const res = await axios.get(`http://localhost:3001/api/category/search?name=${encodeURIComponent(searchTerm)}`);\n//             setCategories(res.data || []);\n//             setError('');\n//         } catch (err) {\n//             console.error('Lỗi khi tìm kiếm danh mục:', err.message);\n//             setError('Không tìm thấy danh mục phù hợp.');\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!name.trim()) {\n//             setError('Tên danh mục không được để trống');\n//             return;\n//         }\n//         try {\n//             const formData = new FormData();\n//             formData.append('name', name);\n//             formData.append('description', description);\n//             if (selectedFile) {\n//                 formData.append('image', selectedFile);\n//             }\n\n//             if (editingId) {\n//                 await axios.put(`http://localhost:3001/api/category/update/${editingId}`, formData, {\n//                     headers: {\n//                         'Content-Type': 'multipart/form-data',\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n//                 setEditingId(null);\n//             } else {\n\n//                 await axios.post('http://localhost:3001/api/category/create', formData, {\n//                     headers: {\n//                         'Content-Type': 'multipart/form-data',\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n//             }\n//             setName('');\n//             setDescription('');\n//             setSelectedFile(null);\n//             setError('');\n//             fetchCategories();\n//         } catch (err) {\n//             console.error('Lỗi khi lưu danh mục:', err.message);\n//             setError('Lỗi khi lưu danh mục');\n//         }\n//     };\n\n//     const handleDelete = async (id) => {\n//         if (!window.confirm('Bạn có chắc muốn xóa danh mục này không?')) return;\n\n//         try {\n//             await axios.delete(`http://localhost:3001/api/category/delete/${id}`, {\n//                 headers: {\n//                     Authorization: `Bearer ${token}`,\n//                 },\n//             });\n\n//             fetchCategories();\n//             setError('');\n//         } catch (err) {\n//             console.error('Lỗi khi xóa danh mục:', err.message);\n//             setError('Lỗi khi xóa danh mục');\n//         }\n//     };\n\n//     const handleEdit = (category) => {\n//         setEditingId(category._id);\n//         setName(category.name);\n//         setDescription(category.description || '');\n//         setSelectedFile(null);\n//     };\n\n//     const handleCancelEdit = () => {\n//         setEditingId(null);\n//         setName('');\n//         setDescription('');\n//         setSelectedFile(null);\n//         setError('');\n//     };\n\n//     return (\n//         <div className=\"category-admin-container\">\n//             <h2>Quản lý danh mục</h2>\n//             <div className=\"search-container\">\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Nhập tên cần tìm...\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                     onKeyDown={(e) => { if (e.key === 'Enter') { e.preventDefault(); handleSearch(); } }}\n//                 />\n//                 <button type=\"button\" onClick={handleSearch}>Tìm kiếm</button>\n//                 <div>\n//                     <span>sort</span>\n//                 </div>\n\n//             </div>\n//             {error && <p className=\"error-message\">{error}</p>}\n\n//             <form onSubmit={handleSubmit} className=\"category-form\" encType=\"multipart/form-data\">\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Tên danh mục\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                     required\n//                 />\n//                 <textarea\n//                     placeholder=\"Mô tả (tuỳ chọn)\"\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                     rows={3}\n//                 />\n//                 <input\n//                     type=\"file\"\n//                     accept=\"image/*\"\n//                     onChange={(e) => setSelectedFile(e.target.files[0])}\n//                 />\n//                 {editingId && (\n//                     <>\n//                         {categories.find((cat) => cat._id === editingId)?.image && (\n//                             <img\n//                                 src={categories.find((cat) => cat._id === editingId).image}\n//                                 alt=\"Ảnh danh mục\"\n//                                 style={{ width: '120px', margin: '10px 0' }}\n//                             />\n//                         )}\n//                     </>\n//                 )}\n\n//                 <button type=\"submit\">{editingId ? 'Cập nhật' : 'Thêm mới'}</button>\n//                 {editingId && (\n//                     <button type=\"button\" onClick={handleCancelEdit} className=\"cancel-btn\">\n//                         Hủy\n//                     </button>\n//                 )}\n//             </form>\n//             <ul className=\"category-list\">\n//                 {categories.length > 0 ? (\n//                     categories.map((category) => (\n//                         <li key={category._id} className=\"category-item\">\n//                             <div onClick={() => handleEdit(category)} style={{ cursor: 'pointer' }}>\n//                                 <strong>{category.name}</strong><br />\n//                                 <small>{category.description}</small>\n//                                 {category.image && (\n//                                     <img\n//                                         src={category.image}\n//                                         alt={category.name}\n//                                         style={{ width: '60px', display: 'block', marginTop: 5 }}\n//                                     />\n//                                 )}\n//                             </div>\n//                             <button onClick={() => handleDelete(category._id)} className=\"delete-btn\">\n//                                 Xóa\n//                             </button>\n//                         </li>\n//                     ))\n//                 ) : (\n//                     <li>Không có danh mục nào.</li>\n//                 )}\n//             </ul>\n//         </div>\n//     );\n// };\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './categoryAdmin.css';\nimport { useAppContext } from '../../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CategoryAdmin = () => {\n  _s();\n  const {\n    token\n  } = useAppContext();\n\n  // Các state\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState('');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editingId, setEditingId] = useState(null);\n\n  // State cho tìm kiếm và sắp xếp\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortOrder, setSortOrder] = useState('asc'); // asc hoặc desc\n\n  // Hàm lấy danh mục (có thể dùng cho fetch all hoặc fetch search + sort)\n  const fetchCategories = async function () {\n    let search = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n    try {\n      let url = `http://localhost:3001/api/category/all`;\n      if (search) {\n        url = `http://localhost:3001/api/category/search?name=${encodeURIComponent(search)}`;\n      }\n      if (!search) {\n        // nếu không tìm kiếm thì gọi api sort\n        url = `http://localhost:3001/api/category/sort?order=${order}`;\n      }\n      const res = await axios.get(url);\n      setCategories(res.data || []);\n      setError('');\n    } catch (err) {\n      console.error('Lỗi khi lấy dữ liệu:', err.message);\n      setError('Không thể lấy danh mục.');\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  // Tìm kiếm khi click hoặc enter\n  const handleSearch = () => {\n    fetchCategories(searchTerm.trim(), sortOrder);\n  };\n\n  // Thay đổi sắp xếp\n  const handleSortChange = () => {\n    const newOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newOrder);\n    fetchCategories(searchTerm.trim(), newOrder);\n  };\n\n  // ... phần code handleSubmit, handleDelete, handleEdit, handleCancelEdit giữ nguyên như trước\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Qu\\u1EA3n l\\xFD danh m\\u1EE5c\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nh\\u1EADp t\\xEAn c\\u1EA7n t\\xECm...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            handleSearch();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSearch,\n        children: \"T\\xECm ki\\u1EBFm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSortChange,\n        children: [\"S\\u1EAFp x\\u1EBFp: \", sortOrder === 'asc' ? 'A → Z' : 'Z → A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"category-list\",\n      children: categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleEdit(category),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: category.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 33\n          }, this), category.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: category.image,\n            alt: category.name,\n            style: {\n              width: '60px',\n              display: 'block',\n              marginTop: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(category._id),\n          className: \"delete-btn\",\n          children: \"X\\xF3a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 29\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Kh\\xF4ng c\\xF3 danh m\\u1EE5c n\\xE0o.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryAdmin, \"yri8a3Mr35hEHmfLqScloYMMWSQ=\", false, function () {\n  return [useAppContext];\n});\n_c = CategoryAdmin;\nvar _c;\n$RefreshReg$(_c, \"CategoryAdmin\");","map":{"version":3,"names":["React","useEffect","useState","axios","useAppContext","CategoryAdmin","token","categories","setCategories","error","setError","name","setName","description","setDescription","selectedFile","setSelectedFile","editingId","setEditingId","searchTerm","setSearchTerm","sortOrder","setSortOrder","fetchCategories","search","order","url","encodeURIComponent","res","get","data","err","console","message","handleSearch","trim","handleSortChange","newOrder","e","target","value","key","preventDefault","length","map","category","handleEdit","cursor","image","width","display","marginTop","handleDelete","_id"],"sources":["D:/Ecommerce/frontend/src/components/Admin/CategoryAdmin.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import './categoryAdmin.css';\r\n// import { useAppContext } from '../../context/AppContext';\r\n\r\n// export const CategoryAdmin = () => {\r\n//     const { token } = useAppContext();\r\n\r\n//     // State\r\n//     const [categories, setCategories] = useState([]);\r\n//     const [error, setError] = useState('');\r\n//     const [name, setName] = useState('');\r\n//     const [description, setDescription] = useState('');\r\n//     const [selectedFile, setSelectedFile] = useState(null);\r\n//     const [editingId, setEditingId] = useState(null);\r\n//     const [sortOrder, setSortOrder] = useState('asc');\r\n//     const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//     const fetchCategories = async () => {\r\n//         try {\r\n//             const res = await axios.get('http://localhost:3001/api/category/all');\r\n//             setCategories(res.data || []);\r\n//             setError('');\r\n//         } catch (err) {\r\n//             console.error('Lỗi khi lấy dữ liệu:', err.message);\r\n//             setError('Không thể lấy danh mục.');\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         fetchCategories();\r\n//     }, []);\r\n\r\n//     // Hàm gọi API tìm kiếm danh mục theo tên\r\n//     const handleSearch = async () => {\r\n//         if (!searchTerm.trim()) {\r\n//             fetchCategories(); // Nếu ô tìm kiếm rỗng thì load lại tất cả\r\n//             return;\r\n//         }\r\n//         try {\r\n//             const res = await axios.get(`http://localhost:3001/api/category/search?name=${encodeURIComponent(searchTerm)}`);\r\n//             setCategories(res.data || []);\r\n//             setError('');\r\n//         } catch (err) {\r\n//             console.error('Lỗi khi tìm kiếm danh mục:', err.message);\r\n//             setError('Không tìm thấy danh mục phù hợp.');\r\n//         }\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (!name.trim()) {\r\n//             setError('Tên danh mục không được để trống');\r\n//             return;\r\n//         }\r\n//         try {\r\n//             const formData = new FormData();\r\n//             formData.append('name', name);\r\n//             formData.append('description', description);\r\n//             if (selectedFile) {\r\n//                 formData.append('image', selectedFile);\r\n//             }\r\n\r\n//             if (editingId) {\r\n//                 await axios.put(`http://localhost:3001/api/category/update/${editingId}`, formData, {\r\n//                     headers: {\r\n//                         'Content-Type': 'multipart/form-data',\r\n//                         Authorization: `Bearer ${token}`,\r\n//                     },\r\n//                 });\r\n//                 setEditingId(null);\r\n//             } else {\r\n\r\n//                 await axios.post('http://localhost:3001/api/category/create', formData, {\r\n//                     headers: {\r\n//                         'Content-Type': 'multipart/form-data',\r\n//                         Authorization: `Bearer ${token}`,\r\n//                     },\r\n//                 });\r\n//             }\r\n//             setName('');\r\n//             setDescription('');\r\n//             setSelectedFile(null);\r\n//             setError('');\r\n//             fetchCategories();\r\n//         } catch (err) {\r\n//             console.error('Lỗi khi lưu danh mục:', err.message);\r\n//             setError('Lỗi khi lưu danh mục');\r\n//         }\r\n//     };\r\n\r\n//     const handleDelete = async (id) => {\r\n//         if (!window.confirm('Bạn có chắc muốn xóa danh mục này không?')) return;\r\n\r\n//         try {\r\n//             await axios.delete(`http://localhost:3001/api/category/delete/${id}`, {\r\n//                 headers: {\r\n//                     Authorization: `Bearer ${token}`,\r\n//                 },\r\n//             });\r\n\r\n//             fetchCategories();\r\n//             setError('');\r\n//         } catch (err) {\r\n//             console.error('Lỗi khi xóa danh mục:', err.message);\r\n//             setError('Lỗi khi xóa danh mục');\r\n//         }\r\n//     };\r\n\r\n//     const handleEdit = (category) => {\r\n//         setEditingId(category._id);\r\n//         setName(category.name);\r\n//         setDescription(category.description || '');\r\n//         setSelectedFile(null);\r\n//     };\r\n\r\n//     const handleCancelEdit = () => {\r\n//         setEditingId(null);\r\n//         setName('');\r\n//         setDescription('');\r\n//         setSelectedFile(null);\r\n//         setError('');\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"category-admin-container\">\r\n//             <h2>Quản lý danh mục</h2>\r\n//             <div className=\"search-container\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Nhập tên cần tìm...\"\r\n//                     value={searchTerm}\r\n//                     onChange={(e) => setSearchTerm(e.target.value)}\r\n//                     onKeyDown={(e) => { if (e.key === 'Enter') { e.preventDefault(); handleSearch(); } }}\r\n//                 />\r\n//                 <button type=\"button\" onClick={handleSearch}>Tìm kiếm</button>\r\n//                 <div>\r\n//                     <span>sort</span>\r\n//                 </div>\r\n\r\n//             </div>\r\n//             {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//             <form onSubmit={handleSubmit} className=\"category-form\" encType=\"multipart/form-data\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Tên danh mục\"\r\n//                     value={name}\r\n//                     onChange={(e) => setName(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <textarea\r\n//                     placeholder=\"Mô tả (tuỳ chọn)\"\r\n//                     value={description}\r\n//                     onChange={(e) => setDescription(e.target.value)}\r\n//                     rows={3}\r\n//                 />\r\n//                 <input\r\n//                     type=\"file\"\r\n//                     accept=\"image/*\"\r\n//                     onChange={(e) => setSelectedFile(e.target.files[0])}\r\n//                 />\r\n//                 {editingId && (\r\n//                     <>\r\n//                         {categories.find((cat) => cat._id === editingId)?.image && (\r\n//                             <img\r\n//                                 src={categories.find((cat) => cat._id === editingId).image}\r\n//                                 alt=\"Ảnh danh mục\"\r\n//                                 style={{ width: '120px', margin: '10px 0' }}\r\n//                             />\r\n//                         )}\r\n//                     </>\r\n//                 )}\r\n\r\n//                 <button type=\"submit\">{editingId ? 'Cập nhật' : 'Thêm mới'}</button>\r\n//                 {editingId && (\r\n//                     <button type=\"button\" onClick={handleCancelEdit} className=\"cancel-btn\">\r\n//                         Hủy\r\n//                     </button>\r\n//                 )}\r\n//             </form>\r\n//             <ul className=\"category-list\">\r\n//                 {categories.length > 0 ? (\r\n//                     categories.map((category) => (\r\n//                         <li key={category._id} className=\"category-item\">\r\n//                             <div onClick={() => handleEdit(category)} style={{ cursor: 'pointer' }}>\r\n//                                 <strong>{category.name}</strong><br />\r\n//                                 <small>{category.description}</small>\r\n//                                 {category.image && (\r\n//                                     <img\r\n//                                         src={category.image}\r\n//                                         alt={category.name}\r\n//                                         style={{ width: '60px', display: 'block', marginTop: 5 }}\r\n//                                     />\r\n//                                 )}\r\n//                             </div>\r\n//                             <button onClick={() => handleDelete(category._id)} className=\"delete-btn\">\r\n//                                 Xóa\r\n//                             </button>\r\n//                         </li>\r\n//                     ))\r\n//                 ) : (\r\n//                     <li>Không có danh mục nào.</li>\r\n//                 )}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './categoryAdmin.css';\r\nimport { useAppContext } from '../../context/AppContext';\r\n\r\nexport const CategoryAdmin = () => {\r\n    const { token } = useAppContext();\r\n\r\n    // Các state\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [editingId, setEditingId] = useState(null);\r\n\r\n    // State cho tìm kiếm và sắp xếp\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('asc'); // asc hoặc desc\r\n\r\n    // Hàm lấy danh mục (có thể dùng cho fetch all hoặc fetch search + sort)\r\n    const fetchCategories = async (search = '', order = 'asc') => {\r\n        try {\r\n            let url = `http://localhost:3001/api/category/all`;\r\n            if (search) {\r\n                url = `http://localhost:3001/api/category/search?name=${encodeURIComponent(search)}`;\r\n            }\r\n            if (!search) {\r\n                // nếu không tìm kiếm thì gọi api sort\r\n                url = `http://localhost:3001/api/category/sort?order=${order}`;\r\n            }\r\n            const res = await axios.get(url);\r\n            setCategories(res.data || []);\r\n            setError('');\r\n        } catch (err) {\r\n            console.error('Lỗi khi lấy dữ liệu:', err.message);\r\n            setError('Không thể lấy danh mục.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // Tìm kiếm khi click hoặc enter\r\n    const handleSearch = () => {\r\n        fetchCategories(searchTerm.trim(), sortOrder);\r\n    };\r\n\r\n    // Thay đổi sắp xếp\r\n    const handleSortChange = () => {\r\n        const newOrder = sortOrder === 'asc' ? 'desc' : 'asc';\r\n        setSortOrder(newOrder);\r\n        fetchCategories(searchTerm.trim(), newOrder);\r\n    };\r\n\r\n    // ... phần code handleSubmit, handleDelete, handleEdit, handleCancelEdit giữ nguyên như trước\r\n\r\n    return (\r\n        <div className=\"category-admin-container\">\r\n            <h2>Quản lý danh mục</h2>\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nhập tên cần tìm...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            e.preventDefault();\r\n                            handleSearch();\r\n                        }\r\n                    }}\r\n                />\r\n                <button type=\"button\" onClick={handleSearch}>Tìm kiếm</button>\r\n                <button type=\"button\" onClick={handleSortChange}>\r\n                    Sắp xếp: {sortOrder === 'asc' ? 'A → Z' : 'Z → A'}\r\n                </button>\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* Form thêm/sửa danh mục */}\r\n            {/* ... giữ nguyên form như bạn có */}\r\n            \r\n            {/* Danh sách danh mục */}\r\n            <ul className=\"category-list\">\r\n                {categories.length > 0 ? (\r\n                    categories.map(category => (\r\n                        <li key={category._id} className=\"category-item\">\r\n                            <div onClick={() => handleEdit(category)} style={{ cursor: 'pointer' }}>\r\n                                <strong>{category.name}</strong><br />\r\n                                <small>{category.description}</small>\r\n                                {category.image && (\r\n                                    <img\r\n                                        src={category.image}\r\n                                        alt={category.name}\r\n                                        style={{ width: '60px', display: 'block', marginTop: 5 }}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <button onClick={() => handleDelete(category._id)} className=\"delete-btn\">\r\n                                Xóa\r\n                            </button>\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <li>Không có danh mục nào.</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,SAASC,aAAa,QAAQ,0BAA0B;AAAC;AAEzD,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC;EAAM,CAAC,GAAGF,aAAa,EAAE;;EAEjC;EACA,MAAM,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}