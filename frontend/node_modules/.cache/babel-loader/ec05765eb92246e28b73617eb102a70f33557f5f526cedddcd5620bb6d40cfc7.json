{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [customer, setCustomer] = useState(null);\n  const [seller, setSeller] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n\n  // Lấy danh mục từ server\n  const fetchCategories = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/category/all');\n      setCategories(res.data || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy danh mục:', error.message);\n    }\n  };\n\n  // Lấy danh sách sản phẩm từ server\n  const fetchProduct = async () => {\n    try {\n      const res = await axios.get('http://localhost:4003/api/product/all');\n      setProducts(res.data.products || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy danh sách sản phẩm:', error.message);\n    }\n  };\n\n  // Lấy giỏ hàng từ server khi đăng nhập\n  const fetchCart = async customerId => {\n    try {\n      const res = await axios.get(`http://localhost:3003/api/cart/${customerId}`);\n      setCartItems(res.data || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy giỏ hàng:', error.message);\n    }\n  };\n\n  // Thêm sản phẩm vào giỏ hàng (server-side)\n  const addToCart = async (product, quantity) => {\n    try {\n      const storedCustomer = JSON.parse(localStorage.getItem('customer'));\n      const customerId = (storedCustomer === null || storedCustomer === void 0 ? void 0 : storedCustomer._id) || (storedCustomer === null || storedCustomer === void 0 ? void 0 : storedCustomer.id);\n      if (!customerId) {\n        alert(\"Không xác định được người dùng. Vui lòng đăng nhập lại.\");\n        return;\n      }\n\n      // Cập nhật giỏ hàng trực tiếp trên server\n      await axios.post('http://localhost:3003/api/cart/create', {\n        productId: product._id,\n        quantity,\n        customerId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Cập nhật giỏ hàng từ server sau khi thêm sản phẩm\n      fetchCart(customerId);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Xử lý đăng xuất và xóa giỏ hàng\n  const handleLogout = () => {\n    localStorage.removeItem('customer');\n    navigate('/login');\n    setCustomer(null);\n    setCartItems([]); // Xóa giỏ hàng khi đăng xuất\n  };\n\n  useEffect(() => {\n    fetchProduct();\n    fetchCategories();\n    const storedCustomer = localStorage.getItem('customer');\n    if (storedCustomer) {\n      const customerData = JSON.parse(storedCustomer);\n      setCustomer(customerData);\n      if (customerData.role === 'seller') {\n        setSeller(customerData);\n      }\n\n      // Lấy giỏ hàng từ server khi có người dùng đăng nhập\n      fetchCart(customerData._id);\n    }\n  }, []);\n  const value = {\n    navigate,\n    products,\n    cartItems,\n    setCartItems,\n    addToCart,\n    customer,\n    seller,\n    setCustomer,\n    setSeller,\n    categories,\n    handleLogout\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"0nLgjOG4xSWY3z333G63t1dFdLw=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContextProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","axios","AppContext","AppContextProvider","children","customer","setCustomer","seller","setSeller","products","setProducts","cartItems","setCartItems","categories","setCategories","navigate","fetchCategories","res","get","data","error","console","message","fetchProduct","fetchCart","customerId","addToCart","product","quantity","storedCustomer","JSON","parse","localStorage","getItem","_id","id","alert","post","productId","headers","Authorization","log","handleLogout","removeItem","customerData","role","value","useAppContext"],"sources":["D:/Ecommerce/frontend/src/context/AppContext.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [customer, setCustomer] = useState(null);\r\n  const [seller, setSeller] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Lấy danh mục từ server\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/category/all');\r\n      setCategories(res.data || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh mục:', error.message);\r\n    }\r\n  };\r\n\r\n  // Lấy danh sách sản phẩm từ server\r\n  const fetchProduct = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:4003/api/product/all');\r\n      setProducts(res.data.products || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh sách sản phẩm:', error.message);\r\n    }\r\n  };\r\n\r\n  // Lấy giỏ hàng từ server khi đăng nhập\r\n  const fetchCart = async (customerId) => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:3003/api/cart/${customerId}`);\r\n      setCartItems(res.data || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy giỏ hàng:', error.message);\r\n    }\r\n  };\r\n\r\n  // Thêm sản phẩm vào giỏ hàng (server-side)\r\n  const addToCart = async (product, quantity) => {\r\n    try {\r\n      const storedCustomer = JSON.parse(localStorage.getItem('customer'));\r\n      const customerId = storedCustomer?._id || storedCustomer?.id;\r\n      if (!customerId) {\r\n        alert(\"Không xác định được người dùng. Vui lòng đăng nhập lại.\");\r\n        return;\r\n      }\r\n\r\n      // Cập nhật giỏ hàng trực tiếp trên server\r\n      await axios.post('http://localhost:3003/api/cart/create', {\r\n        productId: product._id,\r\n        quantity,\r\n        customerId\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n\r\n      // Cập nhật giỏ hàng từ server sau khi thêm sản phẩm\r\n      fetchCart(customerId);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Xử lý đăng xuất và xóa giỏ hàng\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('customer');\r\n    navigate('/login');\r\n    setCustomer(null);\r\n    setCartItems([]); // Xóa giỏ hàng khi đăng xuất\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProduct();\r\n    fetchCategories();\r\n\r\n    const storedCustomer = localStorage.getItem('customer');\r\n    if (storedCustomer) {\r\n      const customerData = JSON.parse(storedCustomer);\r\n      setCustomer(customerData);\r\n      if (customerData.role === 'seller') {\r\n        setSeller(customerData);\r\n      }\r\n\r\n      // Lấy giỏ hàng từ server khi có người dùng đăng nhập\r\n      fetchCart(customerData._id);\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    navigate,\r\n    products,\r\n    cartItems,\r\n    setCartItems,\r\n    addToCart,\r\n    customer,\r\n    seller,\r\n    setCustomer,\r\n    setSeller,\r\n    categories,\r\n    handleLogout\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}