{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Order\\\\Order.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useAppContext } from '../../context/AppContext';\n// import axios from 'axios';\n// import './order.css';\n// import { Link, useNavigate } from 'react-router-dom';\n// export const Order = () => {\n//   const { user } = useAppContext();\n//   const navigate = useNavigate();\n//   const [cartItems, setCartItems] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [shippingInfo, setShippingInfo] = useState({\n//     name: '',\n//     phone: '',\n//     province: '',\n//     address: '',\n//   });\n//   const [paymentMethod, setPaymentMethod] = useState('');\n//   const [transportMethod, setTransportMethod] = useState('');\n//   const [totalAmount, setTotalAmount] = useState(0);\n\n//   const transportCosts = {\n//     GHN: 35000,\n//     GHTK:25000,\n//     ViettelPost: 30000,\n//   };\n\n//   useEffect(() => {\n//     const fetchCart = async () => {\n//       try {\n//         const res = await axios.get(`http://localhost:3003/api/cart/user/${user.id}`);\n//         setCartItems(res.data);\n//         const total = res.data.reduce(\n//           (total, item) => total + item.quantity * item.productId.price, 0\n//         );\n//         setTotalAmount(total);\n//       } catch (error) {\n//         console.error('Lỗi khi lấy giỏ hàng:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     if (user?.id) {\n//       fetchCart();\n//     }\n//   }, [user]);\n//   const updateTotalAmount = (newTransportMethod) => {\n//     const transportCost = transportCosts[newTransportMethod] || 0;\n//     const newTotalAmount = cartItems.reduce(\n//       (total, item) => total + item.quantity * item.productId.price, 0\n//     ) + transportCost;\n//     setTotalAmount(newTotalAmount);\n//   };\n\n//   const handleTransportChange = (e) => {\n//     setTransportMethod(e.target.value);\n//     updateTotalAmount(e.target.value);\n//   };\n//   const handleOrderSubmit = async () => {\n//     try {\n//       const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\n//       const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\n//       const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\n//       const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\n//       if (!paymentData?._id || !transportData?._id) {\n//         alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\n//         return;\n//       }\n//       const orderData = {\n//         totalOrder: totalAmount,\n//         customerId: user.id,\n//         paymentId: paymentData._id,\n//         shippingInfo,\n//         transportId: transportData._id,\n//         status: 'pending',\n//         userId: user.id,\n\n//       };\n//       const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);\n//       console.log(\"Phản hồi từ API tạo đơn hàng:\", orderRes.data);\n//       const order = orderRes.data.order;\n//       const orderId = order._id;\n\n//       if (!orderId) {\n//         alert('Không tìm thấy ID đơn hàng.');\n//         return;\n//       }\n\n//       for (const item of cartItems) {\n//         const orderDetailsData = {\n//           orderId: orderId,\n//           productId: item.productId._id,\n//           quantity: item.quantity,\n//           totalPrice: item.quantity * item.productId.price,\n//         };\n//         console.log(\"Dữ liệu chi tiết đơn hàng:\", orderDetailsData);\n\n//         await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);\n//         setCartItems([]);\n//       }\n\n//       alert('Đặt hàng thành công!');\n//       navigate('/myOrder'); \n//       await axios.delete(`http://localhost:3003/api/cart/deleteCartByUser/${user.id}`);\n\n//     } catch (error) {\n//       console.error('Lỗi khi tạo đơn hàng:', error);\n//       // if (error.response) {\n//       //   alert(`Lỗi: ${error.response.data.message || 'Có lỗi xảy ra, vui lòng thử lại!'}`);\n\n//       // } else {\n//       //   alert('Đặt hàng không thành công, vui lòng kiểm tra kết nối.');\n//       // }\n//     }\n//   };\n//   return (\n//     <div className=\"payment-container\">\n//       <div className=\"address-section\">\n//         <h3>Địa chỉ nhận hàng</h3>\n//         <form className=\"address-form\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Họ và tên\"\n//             name=\"name\"\n//             value={shippingInfo.name}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })}\n//             required\n//           />\n//           <input\n//             type=\"number\"\n//             placeholder=\"Phone\"\n//             name=\"phone\"\n//             value={shippingInfo.phone}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Tỉnh / Thành phố\"\n//             name=\"province\"\n//             value={shippingInfo.province}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Địa chỉ chi tiết\"\n//             name=\"address\"\n//             value={shippingInfo.address}\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })}\n//             required\n//           />\n//         </form>\n//       </div>\n\n//       <div className=\"payment-method-section\">\n//         <h3>Phương thức thanh toán</h3>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"paymentMethod\"\n//             value=\"cod\"\n//             onChange={(e) => setPaymentMethod(e.target.value)}\n//           />\n//           Thanh toán khi nhận hàng (COD)\n//         </label>\n//       </div>\n\n//       <div className=\"transport-method\">\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"transportMethod\"\n//             value=\"GHN\"\n//             onChange={handleTransportChange}\n//           />\n//           GHN: 35000 Đ\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"transportMethod\"\n//             value=\"GHTK\"\n//             onChange={handleTransportChange}\n//           />\n//           GHTK: 30000 Đ\n//         </label>\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"transportMethod\"\n//             value=\"ViettelPost\"\n//             onChange={handleTransportChange}\n//           />\n//           Viettel Post: 25000 Đ\n//         </label>\n//       </div>\n\n//       <div className=\"product-summary\">\n//         <h3>Sản phẩm</h3>\n//         {loading ? (\n//           <p>Đang tải...</p>\n//         ) : cartItems.length === 0 ? (\n//           <p>Giỏ hàng trống</p>\n//         ) : (\n//           cartItems.map((item) => (\n//             <div className=\"summary-item\" key={item._id}>\n//               <img src={item.productId.image[0]} alt={item.productId.name} />\n//               <div>\n//                 <p>{item.productId.name}</p>\n//                 <p>Số lượng: {item.quantity}</p>\n//                 <p>Giá: {item.productId.price.toLocaleString()} đ</p>\n//               </div>\n//             </div>\n//           ))\n//         )}\n//       </div>\n\n//       <div className=\"payment-summary\">\n//         <h3>Tổng thanh toán</h3>\n//         <p>{totalAmount.toLocaleString()} đ</p>\n//         <button className=\"btn-confirm\" onClick={handleOrderSubmit}>Đặt hàng</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n//CACH2\n// import React, { useState, useEffect } from 'react';\n// import { useAppContext } from '../../context/AppContext';\n// import axios from 'axios';\n// import './order.css';\n// import { useNavigate } from 'react-router-dom';\n\n// export const Order = () => {\n//   const { user } = useAppContext();\n//   const navigate = useNavigate();\n//   const [cartItems, setCartItems] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [shippingInfo, setShippingInfo] = useState({\n//     name: '',\n//     phone: '',\n//     province: '',\n//     address: '',\n//   });\n//   const [paymentMethod, setPaymentMethod] = useState('');\n//   const [transportMethod, setTransportMethod] = useState('');\n//   const [totalAmount, setTotalAmount] = useState(0);\n\n//   const transportCosts = {\n//     GHN: 35000,\n//     GHTK: 25000,\n//     ViettelPost: 30000,\n//   };\n\n//   useEffect(() => {\n//     const selected = localStorage.getItem('selectedCartItems');\n//     if (!selected) {\n//       setCartItems([]);\n//       setLoading(false);\n//       return;\n//     }\n\n//     const items = JSON.parse(selected);\n//     setCartItems(items);\n//     const total = items.reduce(\n//       (sum, item) => sum + item.quantity * item.product.price,\n//       0\n//     );\n//     setTotalAmount(total);\n//     setLoading(false);\n//   }, []);\n\n//   const updateTotalAmount = (method) => {\n//     const cost = transportCosts[method] || 0;\n//     const productTotal = cartItems.reduce(\n//       (sum, item) => sum + item.quantity * item.product.price,\n//       0\n//     );\n//     setTotalAmount(productTotal + cost);\n//   };\n\n//   const handleTransportChange = (e) => {\n//     setTransportMethod(e.target.value);\n//     updateTotalAmount(e.target.value);\n//   };\n\n//   const handleOrderSubmit = async () => {\n//     try {\n//       const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\n//       const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\n\n//       const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\n//       const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\n\n//       if (!paymentData?._id || !transportData?._id) {\n//         alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\n//         return;\n//       }\n\n//       const orderData = {\n//         totalOrder: totalAmount,\n//         customerId: user.id,\n//         paymentId: paymentData._id,\n//         shippingInfo,\n//         transportId: transportData._id,\n//         status: 'pending',\n//         userId: user.id,\n//       };\n\n//       const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);\n//       const orderId = orderRes.data.order?._id;\n//       if (!orderId) {\n//         alert('Không tìm thấy ID đơn hàng.');\n//         return;\n//       }\n\n//       for (const item of cartItems) {\n//         const orderDetailsData = {\n//           orderId,\n//           productId: item.product._id,\n//           quantity: item.quantity,\n//           totalPrice: item.quantity * item.product.price,\n//         };\n//         await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);\n//       }\n\n//       await axios.delete(`http://localhost:3003/api/cart/deleteCartByUser/${user.id}`);\n//       localStorage.removeItem('selectedCartItems');\n//       alert('Đặt hàng thành công!');\n//       navigate('/myOrder');\n//     } catch (error) {\n//       console.error('Lỗi khi tạo đơn hàng:', error);\n//       alert('Đặt hàng không thành công. Vui lòng thử lại.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"payment-container\">\n//       <div className=\"address-section\">\n//         <h3>Địa chỉ nhận hàng</h3>\n//         <form className=\"address-form\">\n//           <input type=\"text\" placeholder=\"Họ và tên\" value={shippingInfo.name} onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })} required />\n//           <input type=\"number\" placeholder=\"Số điện thoại\" value={shippingInfo.phone} onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })} required />\n//           <input type=\"text\" placeholder=\"Tỉnh / Thành phố\" value={shippingInfo.province} onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })} required />\n//           <input type=\"text\" placeholder=\"Địa chỉ chi tiết\" value={shippingInfo.address} onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })} required />\n//         </form>\n//       </div>\n\n//       <div className=\"payment-method-section\">\n//         <h3>Phương thức thanh toán</h3>\n//         <label>\n//           <input type=\"radio\" name=\"paymentMethod\" value=\"cod\" onChange={(e) => setPaymentMethod(e.target.value)} />\n//           Thanh toán khi nhận hàng (COD)\n//         </label>\n//       </div>\n\n//       <div className=\"transport-method\">\n//         <h3>Chọn đơn vị vận chuyển</h3>\n//         <label>\n//           <input type=\"radio\" name=\"transportMethod\" value=\"GHN\" onChange={handleTransportChange} />\n//           GHN: 35.000 đ\n//         </label>\n//         <label>\n//           <input type=\"radio\" name=\"transportMethod\" value=\"GHTK\" onChange={handleTransportChange} />\n//           GHTK: 25.000 đ\n//         </label>\n//         <label>\n//           <input type=\"radio\" name=\"transportMethod\" value=\"ViettelPost\" onChange={handleTransportChange} />\n//           Viettel Post: 30.000 đ\n//         </label>\n//       </div>\n\n//       <div className=\"product-summary\">\n//         <h3>Sản phẩm</h3>\n//         {loading ? (\n//           <p>Đang tải...</p>\n//         ) : cartItems.length === 0 ? (\n//           <p>Không có sản phẩm.</p>\n//         ) : (\n//           cartItems.map((item) => (\n//             <div className=\"summary-item\" key={item._id}>\n//               <img src={item.product.image[0]} alt={item.product.name} />\n//               <div>\n//                 <p>{item.product.name}</p>\n//                 <p>Số lượng: {item.quantity}</p>\n//                 <p>Giá: {item.product.price.toLocaleString()} đ</p>\n//               </div>\n//             </div>\n//           ))\n//         )}\n//       </div>\n\n//       <div className=\"payment-summary\">\n//         <h3>Tổng thanh toán</h3>\n//         <p>{totalAmount.toLocaleString()} đ</p>\n//         <button className=\"btn-confirm\" onClick={handleOrderSubmit}>Đặt hàng</button>\n//       </div>\n//     </div>\n//   );\n// };\nimport React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../../context/AppContext';\nimport axios from 'axios';\nimport './order.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Order = () => {\n  _s();\n  const {\n    user\n  } = useAppContext();\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [shippingInfo, setShippingInfo] = useState({\n    name: '',\n    phone: '',\n    province: '',\n    address: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [transportMethod, setTransportMethod] = useState('');\n  const [totalAmount, setTotalAmount] = useState(0);\n  const transportCosts = {\n    GHN: 35000,\n    GHTK: 25000,\n    ViettelPost: 30000\n  };\n\n  // Lấy giỏ hàng thật từ backend\n  useEffect(() => {\n    if (!(user !== null && user !== void 0 && user.id)) {\n      setCartItems([]);\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    axios.get(`http://localhost:3003/api/cart/user/${user.id}`).then(res => {\n      const cart = res.data;\n      const items = cart.items || [];\n      setCartItems(items);\n\n      // Tính tổng tiền sản phẩm (chưa bao gồm phí vận chuyển)\n      const productTotal = items.reduce((sum, item) => sum + item.quantity * item.productId.price, 0);\n      setTotalAmount(productTotal);\n    }).catch(err => {\n      console.error('Lỗi lấy giỏ hàng:', err);\n      setCartItems([]);\n      setTotalAmount(0);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [user]);\n\n  // Cập nhật tổng tiền khi chọn đơn vị vận chuyển\n  const updateTotalAmount = method => {\n    const cost = transportCosts[method] || 0;\n    const productTotal = cartItems.reduce((sum, item) => sum + item.quantity * item.productId.price, 0);\n    setTotalAmount(productTotal + cost);\n  };\n  const handleTransportChange = e => {\n    setTransportMethod(e.target.value);\n    updateTotalAmount(e.target.value);\n  };\n  const handleOrderSubmit = async () => {\n    if (!shippingInfo.name || !shippingInfo.phone || !shippingInfo.province || !shippingInfo.address) {\n      alert('Vui lòng điền đầy đủ thông tin địa chỉ nhận hàng.');\n      return;\n    }\n    if (!paymentMethod) {\n      alert('Vui lòng chọn phương thức thanh toán.');\n      return;\n    }\n    if (!transportMethod) {\n      alert('Vui lòng chọn đơn vị vận chuyển.');\n      return;\n    }\n    if (cartItems.length === 0) {\n      alert('Giỏ hàng đang trống.');\n      return;\n    }\n    try {\n      var _orderRes$data$order;\n      // Lấy paymentId\n      const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\n      const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\n\n      // Lấy transportId\n      const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\n      const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\n      if (!(paymentData !== null && paymentData !== void 0 && paymentData._id) || !(transportData !== null && transportData !== void 0 && transportData._id)) {\n        alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\n        return;\n      }\n\n      // Tạo order\n      const orderData = {\n        totalOrder: totalAmount,\n        customerId: user.id,\n        paymentId: paymentData._id,\n        shippingInfo,\n        transportId: transportData._id,\n        status: 'pending',\n        userId: user.id\n      };\n      const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);\n      const orderId = (_orderRes$data$order = orderRes.data.order) === null || _orderRes$data$order === void 0 ? void 0 : _orderRes$data$order._id;\n      if (!orderId) {\n        alert('Không tìm thấy ID đơn hàng.');\n        return;\n      }\n\n      // Tạo order details cho từng sản phẩm\n      for (const item of cartItems) {\n        const orderDetailsData = {\n          orderId,\n          productId: item.productId._id,\n          quantity: item.quantity,\n          totalPrice: item.quantity * item.productId.price\n        };\n        await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);\n      }\n\n      // Xóa giỏ hàng backend sau khi đặt thành công\n      await axios.delete(`http://localhost:3003/api/cart/deleteAllCartByUser/${user.id}`);\n      alert('Đặt hàng thành công!');\n      navigate('/myOrder');\n    } catch (error) {\n      console.error('Lỗi khi tạo đơn hàng:', error);\n      alert('Đặt hàng không thành công. Vui lòng thử lại.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0110\\u1ECBa ch\\u1EC9 nh\\u1EADn h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"address-form\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"H\\u1ECD v\\xE0 t\\xEAn\",\n          value: shippingInfo.name,\n          onChange: e => setShippingInfo({\n            ...shippingInfo,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n          value: shippingInfo.phone,\n          onChange: e => setShippingInfo({\n            ...shippingInfo,\n            phone: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"T\\u1EC9nh / Th\\xE0nh ph\\u1ED1\",\n          value: shippingInfo.province,\n          onChange: e => setShippingInfo({\n            ...shippingInfo,\n            province: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0110\\u1ECBa ch\\u1EC9 chi ti\\u1EBFt\",\n          value: shippingInfo.address,\n          onChange: e => setShippingInfo({\n            ...shippingInfo,\n            address: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-method-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ph\\u01B0\\u01A1ng th\\u1EE9c thanh to\\xE1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"cod\",\n          onChange: e => setPaymentMethod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), \"Thanh to\\xE1n khi nh\\u1EADn h\\xE0ng (COD)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transport-method\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ch\\u1ECDn \\u0111\\u01A1n v\\u1ECB v\\u1EADn chuy\\u1EC3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"transportMethod\",\n          value: \"GHN\",\n          onChange: handleTransportChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), \"GHN: 35.000 \\u0111\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"transportMethod\",\n          value: \"GHTK\",\n          onChange: handleTransportChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), \"GHTK: 25.000 \\u0111\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"transportMethod\",\n          value: \"ViettelPost\",\n          onChange: handleTransportChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), \"Viettel Post: 30.000 \\u0111\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"S\\u1EA3n ph\\u1EA9m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0110ang t\\u1EA3i...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this) : cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Kh\\xF4ng c\\xF3 s\\u1EA3n ph\\u1EA9m.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this) : cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.productId.image[0],\n          alt: item.productId.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.productId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Gi\\xE1: \", item.productId.price.toLocaleString(), \" \\u0111\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 15\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"T\\u1ED5ng thanh to\\xE1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [totalAmount.toLocaleString(), \" \\u0111\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-confirm\",\n        onClick: handleOrderSubmit,\n        disabled: loading,\n        children: \"\\u0110\\u1EB7t h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 549,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"p1yysNQpQL5zG8L0X2dPGLUISYg=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c = Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","useEffect","useAppContext","axios","useNavigate","Order","user","navigate","cartItems","setCartItems","loading","setLoading","shippingInfo","setShippingInfo","name","phone","province","address","paymentMethod","setPaymentMethod","transportMethod","setTransportMethod","totalAmount","setTotalAmount","transportCosts","GHN","GHTK","ViettelPost","id","get","then","res","cart","data","items","productTotal","reduce","sum","item","quantity","productId","price","catch","err","console","error","finally","updateTotalAmount","method","cost","handleTransportChange","e","target","value","handleOrderSubmit","alert","length","paymentRes","paymentData","Array","isArray","transportRes","transportData","_id","orderData","totalOrder","customerId","paymentId","transportId","status","userId","orderRes","post","orderId","order","orderDetailsData","totalPrice","delete","preventDefault","map","image","toLocaleString"],"sources":["D:/Ecommerce/frontend/src/components/Order/Order.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useAppContext } from '../../context/AppContext';\r\n// import axios from 'axios';\r\n// import './order.css';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// export const Order = () => {\r\n//   const { user } = useAppContext();\r\n//   const navigate = useNavigate();\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [shippingInfo, setShippingInfo] = useState({\r\n//     name: '',\r\n//     phone: '',\r\n//     province: '',\r\n//     address: '',\r\n//   });\r\n//   const [paymentMethod, setPaymentMethod] = useState('');\r\n//   const [transportMethod, setTransportMethod] = useState('');\r\n//   const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n//   const transportCosts = {\r\n//     GHN: 35000,\r\n//     GHTK:25000,\r\n//     ViettelPost: 30000,\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchCart = async () => {\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:3003/api/cart/user/${user.id}`);\r\n//         setCartItems(res.data);\r\n//         const total = res.data.reduce(\r\n//           (total, item) => total + item.quantity * item.productId.price, 0\r\n//         );\r\n//         setTotalAmount(total);\r\n//       } catch (error) {\r\n//         console.error('Lỗi khi lấy giỏ hàng:', error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     if (user?.id) {\r\n//       fetchCart();\r\n//     }\r\n//   }, [user]);\r\n//   const updateTotalAmount = (newTransportMethod) => {\r\n//     const transportCost = transportCosts[newTransportMethod] || 0;\r\n//     const newTotalAmount = cartItems.reduce(\r\n//       (total, item) => total + item.quantity * item.productId.price, 0\r\n//     ) + transportCost;\r\n//     setTotalAmount(newTotalAmount);\r\n//   };\r\n\r\n//   const handleTransportChange = (e) => {\r\n//     setTransportMethod(e.target.value);\r\n//     updateTotalAmount(e.target.value);\r\n//   };\r\n//   const handleOrderSubmit = async () => {\r\n//     try {\r\n//       const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\r\n//       const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\r\n//       const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\r\n//       const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\r\n//       if (!paymentData?._id || !transportData?._id) {\r\n//         alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\r\n//         return;\r\n//       }\r\n//       const orderData = {\r\n//         totalOrder: totalAmount,\r\n//         customerId: user.id,\r\n//         paymentId: paymentData._id,\r\n//         shippingInfo,\r\n//         transportId: transportData._id,\r\n//         status: 'pending',\r\n//         userId: user.id,\r\n\r\n//       };\r\n//       const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);\r\n//       console.log(\"Phản hồi từ API tạo đơn hàng:\", orderRes.data);\r\n//       const order = orderRes.data.order;\r\n//       const orderId = order._id;\r\n\r\n//       if (!orderId) {\r\n//         alert('Không tìm thấy ID đơn hàng.');\r\n//         return;\r\n//       }\r\n\r\n//       for (const item of cartItems) {\r\n//         const orderDetailsData = {\r\n//           orderId: orderId,\r\n//           productId: item.productId._id,\r\n//           quantity: item.quantity,\r\n//           totalPrice: item.quantity * item.productId.price,\r\n//         };\r\n//         console.log(\"Dữ liệu chi tiết đơn hàng:\", orderDetailsData);\r\n\r\n//         await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);\r\n//         setCartItems([]);\r\n//       }\r\n\r\n//       alert('Đặt hàng thành công!');\r\n//       navigate('/myOrder'); \r\n//       await axios.delete(`http://localhost:3003/api/cart/deleteCartByUser/${user.id}`);\r\n      \r\n//     } catch (error) {\r\n//       console.error('Lỗi khi tạo đơn hàng:', error);\r\n//       // if (error.response) {\r\n//       //   alert(`Lỗi: ${error.response.data.message || 'Có lỗi xảy ra, vui lòng thử lại!'}`);\r\n\r\n//       // } else {\r\n//       //   alert('Đặt hàng không thành công, vui lòng kiểm tra kết nối.');\r\n//       // }\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div className=\"payment-container\">\r\n//       <div className=\"address-section\">\r\n//         <h3>Địa chỉ nhận hàng</h3>\r\n//         <form className=\"address-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Họ và tên\"\r\n//             name=\"name\"\r\n//             value={shippingInfo.name}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Phone\"\r\n//             name=\"phone\"\r\n//             value={shippingInfo.phone}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Tỉnh / Thành phố\"\r\n//             name=\"province\"\r\n//             value={shippingInfo.province}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Địa chỉ chi tiết\"\r\n//             name=\"address\"\r\n//             value={shippingInfo.address}\r\n//             onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })}\r\n//             required\r\n//           />\r\n//         </form>\r\n//       </div>\r\n\r\n//       <div className=\"payment-method-section\">\r\n//         <h3>Phương thức thanh toán</h3>\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"paymentMethod\"\r\n//             value=\"cod\"\r\n//             onChange={(e) => setPaymentMethod(e.target.value)}\r\n//           />\r\n//           Thanh toán khi nhận hàng (COD)\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div className=\"transport-method\">\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"transportMethod\"\r\n//             value=\"GHN\"\r\n//             onChange={handleTransportChange}\r\n//           />\r\n//           GHN: 35000 Đ\r\n//         </label>\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"transportMethod\"\r\n//             value=\"GHTK\"\r\n//             onChange={handleTransportChange}\r\n//           />\r\n//           GHTK: 30000 Đ\r\n//         </label>\r\n//         <label>\r\n//           <input\r\n//             type=\"radio\"\r\n//             name=\"transportMethod\"\r\n//             value=\"ViettelPost\"\r\n//             onChange={handleTransportChange}\r\n//           />\r\n//           Viettel Post: 25000 Đ\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div className=\"product-summary\">\r\n//         <h3>Sản phẩm</h3>\r\n//         {loading ? (\r\n//           <p>Đang tải...</p>\r\n//         ) : cartItems.length === 0 ? (\r\n//           <p>Giỏ hàng trống</p>\r\n//         ) : (\r\n//           cartItems.map((item) => (\r\n//             <div className=\"summary-item\" key={item._id}>\r\n//               <img src={item.productId.image[0]} alt={item.productId.name} />\r\n//               <div>\r\n//                 <p>{item.productId.name}</p>\r\n//                 <p>Số lượng: {item.quantity}</p>\r\n//                 <p>Giá: {item.productId.price.toLocaleString()} đ</p>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         )}\r\n//       </div>\r\n\r\n//       <div className=\"payment-summary\">\r\n//         <h3>Tổng thanh toán</h3>\r\n//         <p>{totalAmount.toLocaleString()} đ</p>\r\n//         <button className=\"btn-confirm\" onClick={handleOrderSubmit}>Đặt hàng</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n//CACH2\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useAppContext } from '../../context/AppContext';\r\n// import axios from 'axios';\r\n// import './order.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// export const Order = () => {\r\n//   const { user } = useAppContext();\r\n//   const navigate = useNavigate();\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [shippingInfo, setShippingInfo] = useState({\r\n//     name: '',\r\n//     phone: '',\r\n//     province: '',\r\n//     address: '',\r\n//   });\r\n//   const [paymentMethod, setPaymentMethod] = useState('');\r\n//   const [transportMethod, setTransportMethod] = useState('');\r\n//   const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n//   const transportCosts = {\r\n//     GHN: 35000,\r\n//     GHTK: 25000,\r\n//     ViettelPost: 30000,\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const selected = localStorage.getItem('selectedCartItems');\r\n//     if (!selected) {\r\n//       setCartItems([]);\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const items = JSON.parse(selected);\r\n//     setCartItems(items);\r\n//     const total = items.reduce(\r\n//       (sum, item) => sum + item.quantity * item.product.price,\r\n//       0\r\n//     );\r\n//     setTotalAmount(total);\r\n//     setLoading(false);\r\n//   }, []);\r\n\r\n//   const updateTotalAmount = (method) => {\r\n//     const cost = transportCosts[method] || 0;\r\n//     const productTotal = cartItems.reduce(\r\n//       (sum, item) => sum + item.quantity * item.product.price,\r\n//       0\r\n//     );\r\n//     setTotalAmount(productTotal + cost);\r\n//   };\r\n\r\n//   const handleTransportChange = (e) => {\r\n//     setTransportMethod(e.target.value);\r\n//     updateTotalAmount(e.target.value);\r\n//   };\r\n\r\n//   const handleOrderSubmit = async () => {\r\n//     try {\r\n//       const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\r\n//       const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\r\n\r\n//       const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\r\n//       const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\r\n\r\n//       if (!paymentData?._id || !transportData?._id) {\r\n//         alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\r\n//         return;\r\n//       }\r\n\r\n//       const orderData = {\r\n//         totalOrder: totalAmount,\r\n//         customerId: user.id,\r\n//         paymentId: paymentData._id,\r\n//         shippingInfo,\r\n//         transportId: transportData._id,\r\n//         status: 'pending',\r\n//         userId: user.id,\r\n//       };\r\n\r\n//       const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);\r\n//       const orderId = orderRes.data.order?._id;\r\n//       if (!orderId) {\r\n//         alert('Không tìm thấy ID đơn hàng.');\r\n//         return;\r\n//       }\r\n\r\n//       for (const item of cartItems) {\r\n//         const orderDetailsData = {\r\n//           orderId,\r\n//           productId: item.product._id,\r\n//           quantity: item.quantity,\r\n//           totalPrice: item.quantity * item.product.price,\r\n//         };\r\n//         await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);\r\n//       }\r\n\r\n//       await axios.delete(`http://localhost:3003/api/cart/deleteCartByUser/${user.id}`);\r\n//       localStorage.removeItem('selectedCartItems');\r\n//       alert('Đặt hàng thành công!');\r\n//       navigate('/myOrder');\r\n//     } catch (error) {\r\n//       console.error('Lỗi khi tạo đơn hàng:', error);\r\n//       alert('Đặt hàng không thành công. Vui lòng thử lại.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"payment-container\">\r\n//       <div className=\"address-section\">\r\n//         <h3>Địa chỉ nhận hàng</h3>\r\n//         <form className=\"address-form\">\r\n//           <input type=\"text\" placeholder=\"Họ và tên\" value={shippingInfo.name} onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })} required />\r\n//           <input type=\"number\" placeholder=\"Số điện thoại\" value={shippingInfo.phone} onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })} required />\r\n//           <input type=\"text\" placeholder=\"Tỉnh / Thành phố\" value={shippingInfo.province} onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })} required />\r\n//           <input type=\"text\" placeholder=\"Địa chỉ chi tiết\" value={shippingInfo.address} onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })} required />\r\n//         </form>\r\n//       </div>\r\n\r\n//       <div className=\"payment-method-section\">\r\n//         <h3>Phương thức thanh toán</h3>\r\n//         <label>\r\n//           <input type=\"radio\" name=\"paymentMethod\" value=\"cod\" onChange={(e) => setPaymentMethod(e.target.value)} />\r\n//           Thanh toán khi nhận hàng (COD)\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div className=\"transport-method\">\r\n//         <h3>Chọn đơn vị vận chuyển</h3>\r\n//         <label>\r\n//           <input type=\"radio\" name=\"transportMethod\" value=\"GHN\" onChange={handleTransportChange} />\r\n//           GHN: 35.000 đ\r\n//         </label>\r\n//         <label>\r\n//           <input type=\"radio\" name=\"transportMethod\" value=\"GHTK\" onChange={handleTransportChange} />\r\n//           GHTK: 25.000 đ\r\n//         </label>\r\n//         <label>\r\n//           <input type=\"radio\" name=\"transportMethod\" value=\"ViettelPost\" onChange={handleTransportChange} />\r\n//           Viettel Post: 30.000 đ\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div className=\"product-summary\">\r\n//         <h3>Sản phẩm</h3>\r\n//         {loading ? (\r\n//           <p>Đang tải...</p>\r\n//         ) : cartItems.length === 0 ? (\r\n//           <p>Không có sản phẩm.</p>\r\n//         ) : (\r\n//           cartItems.map((item) => (\r\n//             <div className=\"summary-item\" key={item._id}>\r\n//               <img src={item.product.image[0]} alt={item.product.name} />\r\n//               <div>\r\n//                 <p>{item.product.name}</p>\r\n//                 <p>Số lượng: {item.quantity}</p>\r\n//                 <p>Giá: {item.product.price.toLocaleString()} đ</p>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         )}\r\n//       </div>\r\n\r\n//       <div className=\"payment-summary\">\r\n//         <h3>Tổng thanh toán</h3>\r\n//         <p>{totalAmount.toLocaleString()} đ</p>\r\n//         <button className=\"btn-confirm\" onClick={handleOrderSubmit}>Đặt hàng</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAppContext } from '../../context/AppContext';\r\nimport axios from 'axios';\r\nimport './order.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const Order = () => {\r\n  const { user } = useAppContext();\r\n  const navigate = useNavigate();\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [shippingInfo, setShippingInfo] = useState({\r\n    name: '',\r\n    phone: '',\r\n    province: '',\r\n    address: '',\r\n  });\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n  const [transportMethod, setTransportMethod] = useState('');\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n  const transportCosts = {\r\n    GHN: 35000,\r\n    GHTK: 25000,\r\n    ViettelPost: 30000,\r\n  };\r\n\r\n  // Lấy giỏ hàng thật từ backend\r\n  useEffect(() => {\r\n    if (!user?.id) {\r\n      setCartItems([]);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    axios.get(`http://localhost:3003/api/cart/user/${user.id}`)\r\n      .then((res) => {\r\n        const cart = res.data;\r\n        const items = cart.items || [];\r\n        setCartItems(items);\r\n\r\n        // Tính tổng tiền sản phẩm (chưa bao gồm phí vận chuyển)\r\n        const productTotal = items.reduce(\r\n          (sum, item) => sum + item.quantity * item.productId.price,\r\n          0\r\n        );\r\n        setTotalAmount(productTotal);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Lỗi lấy giỏ hàng:', err);\r\n        setCartItems([]);\r\n        setTotalAmount(0);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [user]);\r\n\r\n  // Cập nhật tổng tiền khi chọn đơn vị vận chuyển\r\n  const updateTotalAmount = (method) => {\r\n    const cost = transportCosts[method] || 0;\r\n    const productTotal = cartItems.reduce(\r\n      (sum, item) => sum + item.quantity * item.productId.price,\r\n      0\r\n    );\r\n    setTotalAmount(productTotal + cost);\r\n  };\r\n\r\n  const handleTransportChange = (e) => {\r\n    setTransportMethod(e.target.value);\r\n    updateTotalAmount(e.target.value);\r\n  };\r\n\r\n  const handleOrderSubmit = async () => {\r\n    if (!shippingInfo.name || !shippingInfo.phone || !shippingInfo.province || !shippingInfo.address) {\r\n      alert('Vui lòng điền đầy đủ thông tin địa chỉ nhận hàng.');\r\n      return;\r\n    }\r\n    if (!paymentMethod) {\r\n      alert('Vui lòng chọn phương thức thanh toán.');\r\n      return;\r\n    }\r\n    if (!transportMethod) {\r\n      alert('Vui lòng chọn đơn vị vận chuyển.');\r\n      return;\r\n    }\r\n    if (cartItems.length === 0) {\r\n      alert('Giỏ hàng đang trống.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Lấy paymentId\r\n      const paymentRes = await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\r\n      const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\r\n\r\n      // Lấy transportId\r\n      const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\r\n      const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\r\n\r\n      if (!paymentData?._id || !transportData?._id) {\r\n        alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\r\n        return;\r\n      }\r\n\r\n      // Tạo order\r\n      const orderData = {\r\n        totalOrder: totalAmount,\r\n        customerId: user.id,\r\n        paymentId: paymentData._id,\r\n        shippingInfo,\r\n        transportId: transportData._id,\r\n        status: 'pending',\r\n        userId: user.id,\r\n      };\r\n\r\n      const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);\r\n      const orderId = orderRes.data.order?._id;\r\n      if (!orderId) {\r\n        alert('Không tìm thấy ID đơn hàng.');\r\n        return;\r\n      }\r\n\r\n      // Tạo order details cho từng sản phẩm\r\n      for (const item of cartItems) {\r\n        const orderDetailsData = {\r\n          orderId,\r\n          productId: item.productId._id,\r\n          quantity: item.quantity,\r\n          totalPrice: item.quantity * item.productId.price,\r\n        };\r\n        await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);\r\n      }\r\n\r\n      // Xóa giỏ hàng backend sau khi đặt thành công\r\n      await axios.delete(`http://localhost:3003/api/cart/deleteAllCartByUser/${user.id}`);\r\n\r\n      alert('Đặt hàng thành công!');\r\n      navigate('/myOrder');\r\n    } catch (error) {\r\n      console.error('Lỗi khi tạo đơn hàng:', error);\r\n      alert('Đặt hàng không thành công. Vui lòng thử lại.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <div className=\"address-section\">\r\n        <h3>Địa chỉ nhận hàng</h3>\r\n        <form className=\"address-form\" onSubmit={e => e.preventDefault()}>\r\n          <input type=\"text\" placeholder=\"Họ và tên\" value={shippingInfo.name} onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })} required />\r\n          <input type=\"tel\" placeholder=\"Số điện thoại\" value={shippingInfo.phone} onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })} required />\r\n          <input type=\"text\" placeholder=\"Tỉnh / Thành phố\" value={shippingInfo.province} onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })} required />\r\n          <input type=\"text\" placeholder=\"Địa chỉ chi tiết\" value={shippingInfo.address} onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })} required />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"payment-method-section\">\r\n        <h3>Phương thức thanh toán</h3>\r\n        <label>\r\n          <input type=\"radio\" name=\"paymentMethod\" value=\"cod\" onChange={(e) => setPaymentMethod(e.target.value)} />\r\n          Thanh toán khi nhận hàng (COD)\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"transport-method\">\r\n        <h3>Chọn đơn vị vận chuyển</h3>\r\n        <label>\r\n          <input type=\"radio\" name=\"transportMethod\" value=\"GHN\" onChange={handleTransportChange} />\r\n          GHN: 35.000 đ\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"transportMethod\" value=\"GHTK\" onChange={handleTransportChange} />\r\n          GHTK: 25.000 đ\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"transportMethod\" value=\"ViettelPost\" onChange={handleTransportChange} />\r\n          Viettel Post: 30.000 đ\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"product-summary\">\r\n        <h3>Sản phẩm</h3>\r\n        {loading ? (\r\n          <p>Đang tải...</p>\r\n        ) : cartItems.length === 0 ? (\r\n          <p>Không có sản phẩm.</p>\r\n        ) : (\r\n          cartItems.map((item) => (\r\n            <div className=\"summary-item\" key={item._id}>\r\n              <img src={item.productId.image[0]} alt={item.productId.name} />\r\n              <div>\r\n                <p>{item.productId.name}</p>\r\n                <p>Số lượng: {item.quantity}</p>\r\n                <p>Giá: {item.productId.price.toLocaleString()} đ</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"payment-summary\">\r\n        <h3>Tổng thanh toán</h3>\r\n        <p>{totalAmount.toLocaleString()} đ</p>\r\n        <button className=\"btn-confirm\" onClick={handleOrderSubmit} disabled={loading}>\r\n          Đặt hàng\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC;EAAK,CAAC,GAAGJ,aAAa,EAAE;EAChC,MAAMK,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC;IAC/Cc,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}