{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [customer, setCustomer] = useState(null);\n  const [seller, setSeller] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState(() => {\n    const storedCart = localStorage.getItem('cartItems');\n    return storedCart ? JSON.parse(storedCart) : [];\n  });\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  const fetchCartItems = async customerId => {\n    try {\n      const res = await axios.get(`http://localhost:3003/api/cart/customer/${customerId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Cart data from server:', res.data);\n      if (Array.isArray(res.data)) {\n        const formattedCart = res.data.map(item => {\n          var _item$productId$image;\n          return {\n            _id: item._id,\n            productId: item.productId._id,\n            quantity: item.quantity,\n            productName: item.productId.name,\n            productImage: (_item$productId$image = item.productId.image) === null || _item$productId$image === void 0 ? void 0 : _item$productId$image[0],\n            productPrice: item.productId.price\n          };\n        });\n        setCartItems(formattedCart);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi tải giỏ hàng:\", error);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/category/all');\n      setCategories(res.data || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy danh mục:', error.message);\n    }\n  };\n  const addToCart = async (product, quantity) => {\n    try {\n      const storedCustomer = JSON.parse(localStorage.getItem('customer'));\n      const customerId = (storedCustomer === null || storedCustomer === void 0 ? void 0 : storedCustomer._id) || (storedCustomer === null || storedCustomer === void 0 ? void 0 : storedCustomer.id);\n      if (!customerId) {\n        alert(\"Không xác định được người dùng. Vui lòng đăng nhập lại.\");\n        return;\n      }\n      setCartItems(prev => {\n        const existingItem = prev.find(item => item.productId === product._id);\n        let updatedCart;\n        if (existingItem) {\n          updatedCart = prev.map(item => item.productId === product._id ? {\n            ...item,\n            quantity: item.quantity + quantity\n          } : item);\n        } else {\n          var _product$image;\n          updatedCart = [...prev, {\n            productId: product._id,\n            quantity,\n            productName: product.name,\n            productImage: (_product$image = product.image) === null || _product$image === void 0 ? void 0 : _product$image[0],\n            productPrice: product.price\n          }];\n        }\n        localStorage.setItem('cartItems', JSON.stringify(updatedCart));\n        return updatedCart;\n      });\n      await axios.post('http://localhost:3003/api/cart/create', {\n        productId: product._id,\n        quantity,\n        customerId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchProduct = async () => {\n    try {\n      const res = await axios.get('http://localhost:4003/api/product/all');\n      setProducts(res.data.products || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy danh sách sản phẩm:', error.message);\n    }\n  };\n  useEffect(() => {\n    fetchProduct();\n    fetchCategories();\n    const storedCustomer = localStorage.getItem('customer');\n    if (storedCustomer) {\n      const customerData = JSON.parse(storedCustomer);\n      setCustomer(customerData);\n      if (customerData.role === 'seller') {\n        setSeller(customerData);\n      }\n      fetchCartItems(customerData._id || customerData.id);\n    } else {\n      // Nếu không có thông tin khách hàng, vẫn cố gắng tải giỏ hàng từ localStorage\n      const storedCart = localStorage.getItem('cartItems');\n      if (storedCart) {\n        setCartItems(JSON.parse(storedCart));\n      }\n    }\n  }, []);\n\n  // Cập nhật Local Storage mỗi khi cartItems thay đổi\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const value = {\n    navigate,\n    products,\n    cartItems,\n    setCartItems,\n    addToCart,\n    customer,\n    seller,\n    setCustomer,\n    setSeller,\n    categories\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"ZrqfRoHRomHVlW1jTOSSRN/3T6s=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContextProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","axios","AppContext","AppContextProvider","children","customer","setCustomer","seller","setSeller","products","setProducts","cartItems","setCartItems","storedCart","localStorage","getItem","JSON","parse","categories","setCategories","navigate","fetchCartItems","customerId","res","get","headers","Authorization","console","log","data","Array","isArray","formattedCart","map","item","_id","productId","quantity","productName","name","productImage","image","productPrice","price","error","fetchCategories","message","addToCart","product","storedCustomer","id","alert","prev","existingItem","find","updatedCart","setItem","stringify","post","fetchProduct","customerData","role","value","useAppContext"],"sources":["D:/Ecommerce/frontend/src/context/AppContext.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [customer, setCustomer] = useState(null);\r\n  const [seller, setSeller] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState(() => {\r\n    const storedCart = localStorage.getItem('cartItems');\r\n    return storedCart ? JSON.parse(storedCart) : [];\r\n  });\r\n  const [categories, setCategories] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchCartItems = async (customerId) => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:3003/api/cart/customer/${customerId}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      console.log('Cart data from server:', res.data);\r\n      if (Array.isArray(res.data)) {\r\n        const formattedCart = res.data.map(item => ({\r\n          _id: item._id,\r\n          productId: item.productId._id,\r\n          quantity: item.quantity,\r\n          productName: item.productId.name,\r\n          productImage: item.productId.image?.[0],\r\n          productPrice: item.productId.price\r\n        }));\r\n        setCartItems(formattedCart);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải giỏ hàng:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/category/all');\r\n      setCategories(res.data || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh mục:', error.message);\r\n    }\r\n  };\r\n\r\n  const addToCart = async (product, quantity) => {\r\n    try {\r\n      const storedCustomer = JSON.parse(localStorage.getItem('customer'));\r\n      const customerId = storedCustomer?._id || storedCustomer?.id;\r\n      if (!customerId) {\r\n        alert(\"Không xác định được người dùng. Vui lòng đăng nhập lại.\");\r\n        return;\r\n      }\r\n\r\n      setCartItems(prev => {\r\n        const existingItem = prev.find(item => item.productId === product._id);\r\n        let updatedCart;\r\n        if (existingItem) {\r\n          updatedCart = prev.map(item =>\r\n            item.productId === product._id\r\n              ? { ...item, quantity: item.quantity + quantity }\r\n              : item\r\n          );\r\n        } else {\r\n          updatedCart = [\r\n            ...prev,\r\n            {\r\n              productId: product._id,\r\n              quantity,\r\n              productName: product.name,\r\n              productImage: product.image?.[0],\r\n              productPrice: product.price\r\n            }\r\n          ];\r\n        }\r\n        localStorage.setItem('cartItems', JSON.stringify(updatedCart));\r\n        return updatedCart;\r\n      });\r\n\r\n      await axios.post('http://localhost:3003/api/cart/create', {\r\n        productId: product._id,\r\n        quantity,\r\n        customerId\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchProduct = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:4003/api/product/all');\r\n      setProducts(res.data.products || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh sách sản phẩm:', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProduct();\r\n    fetchCategories();\r\n\r\n    const storedCustomer = localStorage.getItem('customer');\r\n    if (storedCustomer) {\r\n      const customerData = JSON.parse(storedCustomer);\r\n      setCustomer(customerData);\r\n      if (customerData.role === 'seller') {\r\n        setSeller(customerData);\r\n      }\r\n      fetchCartItems(customerData._id || customerData.id);\r\n    } else {\r\n      // Nếu không có thông tin khách hàng, vẫn cố gắng tải giỏ hàng từ localStorage\r\n      const storedCart = localStorage.getItem('cartItems');\r\n      if (storedCart) {\r\n        setCartItems(JSON.parse(storedCart));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Cập nhật Local Storage mỗi khi cartItems thay đổi\r\n  useEffect(() => {\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  const value = {\r\n    navigate,\r\n    products,\r\n    cartItems,\r\n    setCartItems,\r\n    addToCart,\r\n    customer,\r\n    seller,\r\n    setCustomer,\r\n    setSeller,\r\n    categories\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,MAAMC,UAAU,gBAAGN,aAAa,EAAE;AAEzC,OAAO,MAAMO,kBAAkB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,MAAM;IAC/C,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EACF,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMqB,QAAQ,GAAGpB,WAAW,EAAE;EAE9B,MAAMqB,cAAc,GAAG,MAAOC,UAAU,IAAK;IAC3C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAE,2CAA0CF,UAAW,EAAC,EAAE;QACnFG,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASZ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAAE;MACtE,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,GAAG,CAACM,IAAI,CAAC;MAC/C,IAAIC,KAAK,CAACC,OAAO,CAACR,GAAG,CAACM,IAAI,CAAC,EAAE;QAC3B,MAAMG,aAAa,GAAGT,GAAG,CAACM,IAAI,CAACI,GAAG,CAACC,IAAI;UAAA;UAAA,OAAK;YAC1CC,GAAG,EAAED,IAAI,CAACC,GAAG;YACbC,SAAS,EAAEF,IAAI,CAACE,SAAS,CAACD,GAAG;YAC7BE,QAAQ,EAAEH,IAAI,CAACG,QAAQ;YACvBC,WAAW,EAAEJ,IAAI,CAACE,SAAS,CAACG,IAAI;YAChCC,YAAY,2BAAEN,IAAI,CAACE,SAAS,CAACK,KAAK,0DAApB,sBAAuB,CAAC,CAAC;YACvCC,YAAY,EAAER,IAAI,CAACE,SAAS,CAACO;UAC/B,CAAC;QAAA,CAAC,CAAC;QACH/B,YAAY,CAACoB,aAAa,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdjB,OAAO,CAACiB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMC,eAAe,GAAG,YAAY;IAClC,IAAI;MACF,MAAMtB,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,wCAAwC,CAAC;MACrEL,aAAa,CAACI,GAAG,CAACM,IAAI,IAAI,EAAE,CAAC;IAC/B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdjB,OAAO,CAACiB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvD;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,OAAOC,OAAO,EAAEX,QAAQ,KAAK;IAC7C,IAAI;MACF,MAAMY,cAAc,GAAGjC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MACnE,MAAMO,UAAU,GAAG,CAAA2B,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEd,GAAG,MAAIc,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEC,EAAE;MAC5D,IAAI,CAAC5B,UAAU,EAAE;QACf6B,KAAK,CAAC,yDAAyD,CAAC;QAChE;MACF;MAEAvC,YAAY,CAACwC,IAAI,IAAI;QACnB,MAAMC,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACpB,IAAI,IAAIA,IAAI,CAACE,SAAS,KAAKY,OAAO,CAACb,GAAG,CAAC;QACtE,IAAIoB,WAAW;QACf,IAAIF,YAAY,EAAE;UAChBE,WAAW,GAAGH,IAAI,CAACnB,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACE,SAAS,KAAKY,OAAO,CAACb,GAAG,GAC1B;YAAE,GAAGD,IAAI;YAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAGA;UAAS,CAAC,GAC/CH,IAAI,CACT;QACH,CAAC,MAAM;UAAA;UACLqB,WAAW,GAAG,CACZ,GAAGH,IAAI,EACP;YACEhB,SAAS,EAAEY,OAAO,CAACb,GAAG;YACtBE,QAAQ;YACRC,WAAW,EAAEU,OAAO,CAACT,IAAI;YACzBC,YAAY,oBAAEQ,OAAO,CAACP,KAAK,mDAAb,eAAgB,CAAC,CAAC;YAChCC,YAAY,EAAEM,OAAO,CAACL;UACxB,CAAC,CACF;QACH;QACA7B,YAAY,CAAC0C,OAAO,CAAC,WAAW,EAAExC,IAAI,CAACyC,SAAS,CAACF,WAAW,CAAC,CAAC;QAC9D,OAAOA,WAAW;MACpB,CAAC,CAAC;MAEF,MAAMtD,KAAK,CAACyD,IAAI,CAAC,uCAAuC,EAAE;QACxDtB,SAAS,EAAEY,OAAO,CAACb,GAAG;QACtBE,QAAQ;QACRf;MACF,CAAC,EAAE;QACDG,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASZ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAAE;MACtE,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdjB,OAAO,CAACC,GAAG,CAACgB,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMpC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,uCAAuC,CAAC;MACpEd,WAAW,CAACa,GAAG,CAACM,IAAI,CAACpB,QAAQ,IAAI,EAAE,CAAC;IACtC,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACdjB,OAAO,CAACiB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACjE;EACF,CAAC;EAEDhD,SAAS,CAAC,MAAM;IACd6D,YAAY,EAAE;IACdd,eAAe,EAAE;IAEjB,MAAMI,cAAc,GAAGnC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIkC,cAAc,EAAE;MAClB,MAAMW,YAAY,GAAG5C,IAAI,CAACC,KAAK,CAACgC,cAAc,CAAC;MAC/C3C,WAAW,CAACsD,YAAY,CAAC;MACzB,IAAIA,YAAY,CAACC,IAAI,KAAK,QAAQ,EAAE;QAClCrD,SAAS,CAACoD,YAAY,CAAC;MACzB;MACAvC,cAAc,CAACuC,YAAY,CAACzB,GAAG,IAAIyB,YAAY,CAACV,EAAE,CAAC;IACrD,CAAC,MAAM;MACL;MACA,MAAMrC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACpD,IAAIF,UAAU,EAAE;QACdD,YAAY,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MACtC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACdgB,YAAY,CAAC0C,OAAO,CAAC,WAAW,EAAExC,IAAI,CAACyC,SAAS,CAAC9C,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMmD,KAAK,GAAG;IACZ1C,QAAQ;IACRX,QAAQ;IACRE,SAAS;IACTC,YAAY;IACZmC,SAAS;IACT1C,QAAQ;IACRE,MAAM;IACND,WAAW;IACXE,SAAS;IACTU;EACF,CAAC;EAED,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE4C,KAAM;IAAA,UAC/B1D;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAC,GA9IWD,kBAAkB;EAAA,QASZH,WAAW;AAAA;AAAA,KATjBG,kBAAkB;AAgJ/B,OAAO,MAAM4D,aAAa,GAAG;EAAA;EAAA,OAAMlE,UAAU,CAACK,UAAU,CAAC;AAAA;AAAC,IAA7C6D,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}