{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [customer, setCustomer] = useState(null);\n  const [seller, setSeller] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n\n  // ✅ Lấy giỏ hàng từ server khi người dùng đã đăng nhập\n  const fetchCartFromServer = async customerId => {\n    try {\n      const res = await axios.get(`http://localhost:3003/api/cart/${customerId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const cartData = res.data.cartItems || [];\n      setCartItems(cartData);\n    } catch (error) {\n      console.error('Lỗi khi lấy giỏ hàng từ server:', error.message);\n    }\n  };\n\n  // ✅ Lấy danh mục sản phẩm\n  const fetchCategories = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/category/all');\n      setCategories(res.data || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy danh mục:', error.message);\n    }\n  };\n\n  // ✅ Lấy tất cả sản phẩm\n  const fetchProduct = async () => {\n    try {\n      const res = await axios.get('http://localhost:4003/api/product/all');\n      setProducts(res.data.products || []);\n    } catch (error) {\n      console.error('Lỗi khi lấy danh sách sản phẩm:', error.message);\n    }\n  };\n\n  // ✅ Thêm vào giỏ hàng (gửi lên server và cập nhật local state)\n  const addToCart = async (product, quantity) => {\n    try {\n      const storedCustomer = JSON.parse(localStorage.getItem('customer'));\n      const customerId = (storedCustomer === null || storedCustomer === void 0 ? void 0 : storedCustomer._id) || (storedCustomer === null || storedCustomer === void 0 ? void 0 : storedCustomer.id);\n      if (!customerId) {\n        alert(\"Không xác định được người dùng. Vui lòng đăng nhập lại.\");\n        return;\n      }\n\n      // Cập nhật state cartItems local\n      setCartItems(prev => {\n        const existingItem = prev.find(item => item.productId === product._id);\n        if (existingItem) {\n          return prev.map(item => item.productId === product._id ? {\n            ...item,\n            quantity: item.quantity + quantity\n          } : item);\n        } else {\n          var _product$image;\n          return [...prev, {\n            productId: product._id,\n            quantity,\n            productName: product.name,\n            productImage: (_product$image = product.image) === null || _product$image === void 0 ? void 0 : _product$image[0],\n            productPrice: product.price\n          }];\n        }\n      });\n\n      // Gửi lên server\n      await axios.post('http://localhost:3003/api/cart/create', {\n        productId: product._id,\n        quantity,\n        customerId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n    } catch (error) {\n      console.error('Lỗi khi thêm vào giỏ hàng:', error.message);\n    }\n  };\n\n  // ✅ Gọi khi App khởi tạo\n  useEffect(() => {\n    fetchProduct();\n    fetchCategories();\n    const storedCustomer = JSON.parse(localStorage.getItem('customer'));\n    if (storedCustomer) {\n      const customerId = storedCustomer._id || storedCustomer.id;\n      setCustomer(storedCustomer);\n      if (storedCustomer.role === 'seller') {\n        setSeller(storedCustomer);\n      }\n      fetchCartFromServer(customerId);\n    }\n  }, []);\n\n  // ✅ Context values\n  const value = {\n    navigate,\n    products,\n    cartItems,\n    setCartItems,\n    addToCart,\n    customer,\n    seller,\n    setCustomer,\n    setSeller,\n    categories\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContextProvider, \"0nLgjOG4xSWY3z333G63t1dFdLw=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContextProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","axios","AppContext","AppContextProvider","children","customer","setCustomer","seller","setSeller","products","setProducts","cartItems","setCartItems","categories","setCategories","navigate","fetchCartFromServer","customerId","res","get","headers","Authorization","localStorage","getItem","cartData","data","error","console","message","fetchCategories","fetchProduct","addToCart","product","quantity","storedCustomer","JSON","parse","_id","id","alert","prev","existingItem","find","item","productId","map","productName","name","productImage","image","productPrice","price","post","role","value","useAppContext"],"sources":["D:/Ecommerce/frontend/src/context/AppContext.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [customer, setCustomer] = useState(null);\r\n  const [seller, setSeller] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Lấy giỏ hàng từ server khi người dùng đã đăng nhập\r\n  const fetchCartFromServer = async (customerId) => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:3003/api/cart/${customerId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n\r\n      const cartData = res.data.cartItems || [];\r\n      setCartItems(cartData);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy giỏ hàng từ server:', error.message);\r\n    }\r\n  };\r\n\r\n  // ✅ Lấy danh mục sản phẩm\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/category/all');\r\n      setCategories(res.data || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh mục:', error.message);\r\n    }\r\n  };\r\n\r\n  // ✅ Lấy tất cả sản phẩm\r\n  const fetchProduct = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:4003/api/product/all');\r\n      setProducts(res.data.products || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh sách sản phẩm:', error.message);\r\n    }\r\n  };\r\n\r\n  // ✅ Thêm vào giỏ hàng (gửi lên server và cập nhật local state)\r\n  const addToCart = async (product, quantity) => {\r\n    try {\r\n      const storedCustomer = JSON.parse(localStorage.getItem('customer'));\r\n      const customerId = storedCustomer?._id || storedCustomer?.id;\r\n      if (!customerId) {\r\n        alert(\"Không xác định được người dùng. Vui lòng đăng nhập lại.\");\r\n        return;\r\n      }\r\n\r\n      // Cập nhật state cartItems local\r\n      setCartItems(prev => {\r\n        const existingItem = prev.find(item => item.productId === product._id);\r\n        if (existingItem) {\r\n          return prev.map(item =>\r\n            item.productId === product._id\r\n              ? { ...item, quantity: item.quantity + quantity }\r\n              : item\r\n          );\r\n        } else {\r\n          return [\r\n            ...prev,\r\n            {\r\n              productId: product._id,\r\n              quantity,\r\n              productName: product.name,\r\n              productImage: product.image?.[0],\r\n              productPrice: product.price\r\n            }\r\n          ];\r\n        }\r\n      });\r\n\r\n      // Gửi lên server\r\n      await axios.post('http://localhost:3003/api/cart/create', {\r\n        productId: product._id,\r\n        quantity,\r\n        customerId\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Lỗi khi thêm vào giỏ hàng:', error.message);\r\n    }\r\n  };\r\n\r\n  // ✅ Gọi khi App khởi tạo\r\n  useEffect(() => {\r\n    fetchProduct();\r\n    fetchCategories();\r\n\r\n    const storedCustomer = JSON.parse(localStorage.getItem('customer'));\r\n    if (storedCustomer) {\r\n      const customerId = storedCustomer._id || storedCustomer.id;\r\n      setCustomer(storedCustomer);\r\n\r\n      if (storedCustomer.role === 'seller') {\r\n        setSeller(storedCustomer);\r\n      }\r\n\r\n      fetchCartFromServer(customerId);\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Context values\r\n  const value = {\r\n    navigate,\r\n    products,\r\n    cartItems,\r\n    setCartItems,\r\n    addToCart,\r\n    customer,\r\n    seller,\r\n    setCustomer,\r\n    setSeller,\r\n    categories\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}