{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useAppContext } from '../../context/AppContext';\n// import axios from 'axios';\n// import './myorder.css';\n\n// export const MyOrder = () => {\n//   const { user } = useAppContext();\n//   const [orders, setOrders] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       try {\n//         const res = await axios.get(`http://localhost:4000/api/order/user/${user.id}`);\n//         setOrders(res.data);\n//       } catch (error) {\n//         console.error('Lỗi khi lấy danh sách đơn hàng:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     if (user?.id) {\n//       fetchOrders();\n//     }\n//   }, [user]);\n\n//   const handleCancelOrder = async (orderId) => {\n//     try {\n//       const res = await axios.delete(`http://localhost:4000/api/order/cancel/${orderId}`);\n//       alert('Hủy đơn hàng thành công!');\n//       setOrders(orders.filter((order) => order.id !== orderId)); // Cập nhật lại danh sách đơn hàng\n//     } catch (error) {\n//       console.error('Lỗi khi hủy đơn hàng:', error);\n//       alert('Hủy đơn hàng không thành công');\n//     }\n//   };\n\n//   return (\n//     <div className=\"my-order\">\n//       <h2>Danh sách đơn hàng của tôi</h2>\n//       {loading ? (\n//         <p>Đang tải...</p>\n//       ) : orders.length === 0 ? (\n//         <p>Bạn chưa có đơn hàng nào.</p>\n//       ) : (\n//         <ul className=\"order-list\">\n//           {orders.map((order) => (\n//             <li key={order.id} className=\"order-item\">\n//               <div className=\"order-header\">\n//                 <span className=\"order-status\">{order.status}</span>\n//                 <span className=\"order-date\">{new Date(order.date).toLocaleDateString()}</span>\n//               </div>\n//               <div className=\"order-products\">\n//                 {order.products.map((product, index) => (\n//                   <div key={index} className=\"product\">\n//                     <p>{product.name} x{product.quantity}</p>\n//                     <p>{product.price.toLocaleString()} VND</p>\n//                   </div>\n//                 ))}\n//               </div>\n//               <div className=\"order-footer\">\n//                 <span className=\"order-total\">\n//                   Tổng cộng: {order.totalPrice.toLocaleString()} VND\n//                 </span>\n//                 {order.status !== 'Đã giao' && (\n//                   <button className=\"btn-cancel\" onClick={() => handleCancelOrder(order.id)}>\n//                     Hủy đơn hàng\n//                   </button>\n//                 )}\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["D:/Ecommerce/frontend/src/components/MyOrder/MyOrder.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useAppContext } from '../../context/AppContext';\r\n// import axios from 'axios';\r\n// import './myorder.css';\r\n\r\n// export const MyOrder = () => {\r\n//   const { user } = useAppContext();\r\n//   const [orders, setOrders] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchOrders = async () => {\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:4000/api/order/user/${user.id}`);\r\n//         setOrders(res.data);\r\n//       } catch (error) {\r\n//         console.error('Lỗi khi lấy danh sách đơn hàng:', error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     if (user?.id) {\r\n//       fetchOrders();\r\n//     }\r\n//   }, [user]);\r\n\r\n//   const handleCancelOrder = async (orderId) => {\r\n//     try {\r\n//       const res = await axios.delete(`http://localhost:4000/api/order/cancel/${orderId}`);\r\n//       alert('Hủy đơn hàng thành công!');\r\n//       setOrders(orders.filter((order) => order.id !== orderId)); // Cập nhật lại danh sách đơn hàng\r\n//     } catch (error) {\r\n//       console.error('Lỗi khi hủy đơn hàng:', error);\r\n//       alert('Hủy đơn hàng không thành công');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"my-order\">\r\n//       <h2>Danh sách đơn hàng của tôi</h2>\r\n//       {loading ? (\r\n//         <p>Đang tải...</p>\r\n//       ) : orders.length === 0 ? (\r\n//         <p>Bạn chưa có đơn hàng nào.</p>\r\n//       ) : (\r\n//         <ul className=\"order-list\">\r\n//           {orders.map((order) => (\r\n//             <li key={order.id} className=\"order-item\">\r\n//               <div className=\"order-header\">\r\n//                 <span className=\"order-status\">{order.status}</span>\r\n//                 <span className=\"order-date\">{new Date(order.date).toLocaleDateString()}</span>\r\n//               </div>\r\n//               <div className=\"order-products\">\r\n//                 {order.products.map((product, index) => (\r\n//                   <div key={index} className=\"product\">\r\n//                     <p>{product.name} x{product.quantity}</p>\r\n//                     <p>{product.price.toLocaleString()} VND</p>\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//               <div className=\"order-footer\">\r\n//                 <span className=\"order-total\">\r\n//                   Tổng cộng: {order.totalPrice.toLocaleString()} VND\r\n//                 </span>\r\n//                 {order.status !== 'Đã giao' && (\r\n//                   <button className=\"btn-cancel\" onClick={() => handleCancelOrder(order.id)}>\r\n//                     Hủy đơn hàng\r\n//                   </button>\r\n//                 )}\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}