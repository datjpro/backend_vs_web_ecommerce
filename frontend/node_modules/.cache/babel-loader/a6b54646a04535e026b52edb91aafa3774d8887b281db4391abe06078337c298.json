{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Order\\\\Order.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAppContext } from '../../context/AppContext';\nimport axios from 'axios';\nimport './order.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Order = () => {\n  _s();\n  const {\n    cartItems,\n    products,\n    customerId,\n    cartId,\n    token\n  } = useAppContext(); // ✅ Lấy từ context\n  const [paymentMethod, setPaymentMethod] = useState('cod');\n  const [shippingInfo, setShippingInfo] = useState({\n    name: '',\n    phone: '',\n    province: '',\n    address: ''\n  });\n  const selectedItems = cartItems.filter(item => item.selected);\n  const getProductById = id => products.find(p => p._id === id);\n  const totalPrice = selectedItems.reduce((acc, item) => {\n    const prod = getProductById(item.productId);\n    if (!prod) return acc;\n    const price = prod.discounted_price || prod.price || 0;\n    return acc + price * item.quantity;\n  }, 0);\n  const handleOrderSubmit = async () => {\n    try {\n      if (!cartId || !customerId || !token) {\n        alert(\"Lỗi: Thiếu thông tin người dùng hoặc giỏ hàng.\");\n        return;\n      }\n      const paymentRes = await axios.post('http://localhost:3007/api/payment/create', {\n        paymentMethod: paymentMethod,\n        paymentStatus: 'Pending'\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const paymentId = paymentRes.data.payment._id;\n      if (!paymentId) throw new Error('Payment ID không hợp lệ');\n      const orderRes = await axios.post('http://localhost:4000/api/order/create', {\n        totalOrder: totalPrice,\n        discountId: [],\n        cartId,\n        customerId,\n        paymentId,\n        status: 'pending',\n        shippingInfo\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const orderId = orderRes.data.order._id;\n      await Promise.all(selectedItems.map(async item => {\n        const prod = getProductById(item.productId);\n        const price = prod.discounted_price || prod.price || 0;\n        await axios.post('http://localhost:4001/api/orderDetails/create', {\n          orderId,\n          productId: item.productId,\n          paymentId,\n          quantity: item.quantity,\n          totalPrice: price * item.quantity\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }));\n      alert('Đặt hàng thành công!');\n    } catch (error) {\n      var _error$response;\n      console.error('Lỗi khi đặt hàng:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Đặt hàng thất bại!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(Order, \"1Y0+fM6p5JawTtWYwCrScHhnyXw=\", false, function () {\n  return [useAppContext];\n});\n_c = Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","useAppContext","axios","Order","cartItems","products","customerId","cartId","token","paymentMethod","setPaymentMethod","shippingInfo","setShippingInfo","name","phone","province","address","selectedItems","filter","item","selected","getProductById","id","find","p","_id","totalPrice","reduce","acc","prod","productId","price","discounted_price","quantity","handleOrderSubmit","alert","paymentRes","post","paymentStatus","headers","Authorization","paymentId","data","payment","Error","orderRes","totalOrder","discountId","status","orderId","order","Promise","all","map","error","console","response","message"],"sources":["D:/Ecommerce/frontend/src/components/Order/Order.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAppContext } from '../../context/AppContext';\r\nimport axios from 'axios';\r\nimport './order.css';\r\n\r\nexport const Order = () => {\r\n    const { cartItems, products, customerId, cartId, token } = useAppContext(); // ✅ Lấy từ context\r\n    const [paymentMethod, setPaymentMethod] = useState('cod');\r\n    const [shippingInfo, setShippingInfo] = useState({\r\n        name: '',\r\n        phone: '',\r\n        province: '',\r\n        address: ''\r\n    });\r\n\r\n    const selectedItems = cartItems.filter(item => item.selected);\r\n    const getProductById = (id) => products.find((p) => p._id === id);\r\n\r\n    const totalPrice = selectedItems.reduce((acc, item) => {\r\n        const prod = getProductById(item.productId);\r\n        if (!prod) return acc;\r\n        const price = prod.discounted_price || prod.price || 0;\r\n        return acc + price * item.quantity;\r\n    }, 0);\r\n\r\n    const handleOrderSubmit = async () => {\r\n        try {\r\n            if (!cartId || !customerId || !token) {\r\n                alert(\"Lỗi: Thiếu thông tin người dùng hoặc giỏ hàng.\");\r\n                return;\r\n            }\r\n\r\n            const paymentRes = await axios.post(\r\n                'http://localhost:3007/api/payment/create',\r\n                {\r\n                    paymentMethod: paymentMethod,\r\n                    paymentStatus: 'Pending'\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                }\r\n            );\r\n\r\n            const paymentId = paymentRes.data.payment._id;\r\n            if (!paymentId) throw new Error('Payment ID không hợp lệ');\r\n\r\n            const orderRes = await axios.post(\r\n                'http://localhost:4000/api/order/create',\r\n                {\r\n                    totalOrder: totalPrice,\r\n                    discountId: [],\r\n                    cartId,\r\n                    customerId,\r\n                    paymentId,\r\n                    status: 'pending',\r\n                    shippingInfo\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                }\r\n            );\r\n\r\n            const orderId = orderRes.data.order._id;\r\n\r\n            await Promise.all(selectedItems.map(async (item) => {\r\n                const prod = getProductById(item.productId);\r\n                const price = prod.discounted_price || prod.price || 0;\r\n\r\n                await axios.post(\r\n                    'http://localhost:4001/api/orderDetails/create',\r\n                    {\r\n                        orderId,\r\n                        productId: item.productId,\r\n                        paymentId,\r\n                        quantity: item.quantity,\r\n                        totalPrice: price * item.quantity\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`\r\n                        }\r\n                    }\r\n                );\r\n            }));\r\n\r\n            alert('Đặt hàng thành công!');\r\n        } catch (error) {\r\n            console.error('Lỗi khi đặt hàng:', error.response?.data || error.message);\r\n            alert('Đặt hàng thất bại!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"payment-container\">\r\n            {/* ...phần còn lại giữ nguyên như cũ... */}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}