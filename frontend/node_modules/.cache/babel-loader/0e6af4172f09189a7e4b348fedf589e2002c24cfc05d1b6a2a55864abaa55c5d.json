{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Order\\\\Order.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport './order.css';\nimport { useAppContext } from '../../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Order = () => {\n  _s();\n  const {\n    cartItems,\n    products\n  } = useAppContext();\n  const [paymentMethod, setPaymentMethod] = useState('cod');\n\n  // Lọc sản phẩm được chọn để mua\n  const selectedItems = cartItems.filter(item => item.selected);\n\n  // Tìm sản phẩm từ danh sách products (sửa id thành _id)\n  const getProductById = id => products.find(p => p._id === id);\n\n  // Tính tổng tiền\n  const totalPrice = selectedItems.reduce((acc, item) => {\n    const prod = getProductById(item.productId);\n    if (!prod) return acc;\n    const price = prod.discounted_price || prod.price || 0;\n    return acc + price * item.quantity;\n  }, 0);\n  const handlePaymentChange = e => {\n    setPaymentMethod(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0110\\u1ECBa ch\\u1EC9 nh\\u1EADn h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"address-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"H\\u1ECD v\\xE0 t\\xEAn\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"T\\u1EC9nh / Th\\xE0nh ph\\u1ED1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0110\\u1ECBa ch\\u1EC9 chi ti\\u1EBFt\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-method-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ph\\u01B0\\u01A1ng th\\u1EE9c thanh to\\xE1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"paymentMethod\",\n            value: \"cod\",\n            checked: paymentMethod === 'cod',\n            onChange: handlePaymentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), \"Thanh to\\xE1n khi nh\\u1EADn h\\xE0ng (COD)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"paymentMethod\",\n            value: \"bank\",\n            checked: paymentMethod === 'bank',\n            onChange: handlePaymentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), \"Chuy\\u1EC3n kho\\u1EA3n ng\\xE2n h\\xE0ng\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"paymentMethod\",\n            value: \"credit\",\n            checked: paymentMethod === 'credit',\n            onChange: handlePaymentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), \"Th\\u1EBB t\\xEDn d\\u1EE5ng / Ghi n\\u1EE3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"S\\u1EA3n ph\\u1EA9m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), selectedItems.map((item, index) => {\n        var _prod$img, _prod$image;\n        const prod = getProductById(item.productId);\n        if (!prod) return null;\n        const price = prod.discounted_price || prod.price || 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ((_prod$img = prod.img) === null || _prod$img === void 0 ? void 0 : _prod$img[0]) || ((_prod$image = prod.image) === null || _prod$image === void 0 ? void 0 : _prod$image[0]) || 'fallback.jpg',\n            alt: prod.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: prod.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Gi\\xE1: \\u0111\", (price * item.quantity).toLocaleString('vi-VN')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"T\\u1ED5ng thanh to\\xE1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0111\", totalPrice.toLocaleString('vi-VN')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/order\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-confirm\",\n          children: \"\\u0110\\u1EB7t h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Order, \"08icO/ahhqLMsU7edODz1C/zWWI=\", false, function () {\n  return [useAppContext];\n});\n_c = Order;\nconst PaymentMethod = require('../models/PaymentMethodModel');\nexports.createPaymentMethod = async (req, res) => {\n  try {\n    const {\n      namePaymentMethod\n    } = req.body;\n    const newPaymentMethod = new PaymentMethod({\n      namePaymentMethod\n    });\n    await newPaymentMethod.save();\n    res.status(201).json({\n      message: 'PaymentMethod created successfully',\n      paymentMethod: newPaymentMethod\n    });\n  } catch (error) {\n    res.status(500).json({\n      message: error.message\n    });\n  }\n};\nexports.getAllPaymentMethods = async (req, res) => {\n  try {\n    const paymentMethods = await PaymentMethod.find();\n    res.status(200).json(paymentMethods);\n  } catch (error) {\n    res.status(500).json({\n      message: error.message\n    });\n  }\n};\nexports.getPaymentMethodById = async (req, res) => {\n  try {\n    const paymentMethod = await PaymentMethod.findById(req.params.id);\n    if (!paymentMethod) {\n      return res.status(404).json({\n        message: 'PaymentMethod not found'\n      });\n    }\n    res.status(200).json(paymentMethod);\n  } catch (error) {\n    res.status(500).json({\n      message: error.message\n    });\n  }\n};\nexports.updatePaymentMethod = async (req, res) => {\n  try {\n    const {\n      namePaymentMethod\n    } = req.body;\n    const paymentMethod = await PaymentMethod.findByIdAndUpdate(req.params.id, {\n      namePaymentMethod\n    }, {\n      new: true\n    });\n    if (!paymentMethod) {\n      return res.status(404).json({\n        message: 'PaymentMethod not found'\n      });\n    }\n    res.status(200).json({\n      message: 'PaymentMethod updated successfully',\n      paymentMethod\n    });\n  } catch (error) {\n    res.status(500).json({\n      message: error.message\n    });\n  }\n};\nexports.deletePaymentMethod = async (req, res) => {\n  try {\n    const paymentMethod = await PaymentMethod.findByIdAndDelete(req.params.id);\n    if (!paymentMethod) {\n      return res.status(404).json({\n        message: 'PaymentMethod not found'\n      });\n    }\n    res.status(200).json({\n      message: 'PaymentMethod deleted successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      message: error.message\n    });\n  }\n};\nconst Payment = require('../models/PaymentModel');\nexports.createPayment = async (req, res) => {\n  try {\n    const {\n      paymentDate,\n      amount,\n      paymentMethodId,\n      paymentStatusId\n    } = req.body;\n    if (amount <= 0) {\n      return res.status(400).json({\n        message: 'Amount must be greater than zero'\n      });\n    }\n    const newPayment = new Payment({\n      paymentDate,\n      amount,\n      paymentMethodId,\n      paymentStatusId\n    });\n    await newPayment.save();\n    res.status(201).json({\n      message: 'Payment created successfully',\n      payment: newPayment\n    });\n  } catch (error) {\n    res.status(500).json({\n      message: error.message || 'Something went wrong'\n    });\n  }\n};\nexports.getAllPayments = async (req, res) => {\n  try {\n    const payments = await Payment.find().populate('paymentMethodId').populate('paymentStatusId');\n    res.status(200).json(payments);\n  } catch (error) {\n    res.status(500).json({\n      message: error.message || 'Something went wrong'\n    });\n  }\n};\nexports.getPaymentById = async (req, res) => {\n  try {\n    const payment = await Payment.findById(req.params.id).populate('paymentMethodId').populate('paymentStatusId');\n    if (!payment) {\n      return res.status(404).json({\n        message: 'Payment not found'\n      });\n    }\n    res.status(200).json(payment);\n  } catch (error) {\n    res.status(500).json({\n      message: error.message || 'Something went wrong'\n    });\n  }\n};\nexports.updatePayment = async (req, res) => {\n  try {\n    const {\n      paymentDate,\n      amount,\n      paymentMethodId,\n      paymentStatusId\n    } = req.body;\n    if (amount <= 0) {\n      return res.status(400).json({\n        message: 'Amount must be greater than zero'\n      });\n    }\n    const payment = await Payment.findByIdAndUpdate(req.params.id, {\n      paymentDate,\n      amount,\n      paymentMethodId,\n      paymentStatusId\n    }, {\n      new: true\n    });\n    if (!payment) {\n      return res.status(404).json({\n        message: 'Payment not found'\n      });\n    }\n    res.status(200).json({\n      message: 'Payment updated successfully',\n      payment\n    });\n  } catch (error) {\n    res.status(500).json({\n      message: error.message || 'Something went wrong'\n    });\n  }\n};\nexports.deletePayment = async (req, res) => {\n  try {\n    const payment = await Payment.findByIdAndDelete(req.params.id);\n    if (!payment) {\n      return res.status(404).json({\n        message: 'Payment not found'\n      });\n    }\n    res.status(200).json({\n      message: 'Payment deleted successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      message: error.message || 'Something went wrong'\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["Link","React","useState","useAppContext","Order","cartItems","products","paymentMethod","setPaymentMethod","selectedItems","filter","item","selected","getProductById","id","find","p","_id","totalPrice","reduce","acc","prod","productId","price","discounted_price","quantity","handlePaymentChange","e","target","value","map","index","img","image","name","toLocaleString","PaymentMethod","require","exports","createPaymentMethod","req","res","namePaymentMethod","body","newPaymentMethod","save","status","json","message","error","getAllPaymentMethods","paymentMethods","getPaymentMethodById","findById","params","updatePaymentMethod","findByIdAndUpdate","new","deletePaymentMethod","findByIdAndDelete","Payment","createPayment","paymentDate","amount","paymentMethodId","paymentStatusId","newPayment","payment","getAllPayments","payments","populate","getPaymentById","updatePayment","deletePayment"],"sources":["D:/Ecommerce/frontend/src/components/Order/Order.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';  \r\nimport React, { useState } from 'react';\r\nimport './order.css';\r\nimport { useAppContext } from '../../context/AppContext';\r\n\r\nexport const Order = () => {\r\n    const { cartItems, products } = useAppContext();\r\n    const [paymentMethod, setPaymentMethod] = useState('cod');\r\n\r\n    // Lọc sản phẩm được chọn để mua\r\n    const selectedItems = cartItems.filter(item => item.selected);\r\n\r\n    // Tìm sản phẩm từ danh sách products (sửa id thành _id)\r\n    const getProductById = (id) => products.find((p) => p._id === id);\r\n\r\n    // Tính tổng tiền\r\n    const totalPrice = selectedItems.reduce((acc, item) => {\r\n        const prod = getProductById(item.productId);\r\n        if (!prod) return acc;\r\n        const price = prod.discounted_price || prod.price || 0;\r\n        return acc + price * item.quantity;\r\n    }, 0);\r\n\r\n    const handlePaymentChange = (e) => {\r\n        setPaymentMethod(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"payment-container\">\r\n\r\n            <div className=\"address-section\">\r\n                <h3>Địa chỉ nhận hàng</h3>\r\n                <form className=\"address-form\">\r\n                    <input type=\"text\" placeholder=\"Họ và tên\" required />\r\n                    <input type=\"text\" placeholder=\"Số điện thoại\" required />\r\n                    <input type=\"text\" placeholder=\"Tỉnh / Thành phố\" required />\r\n                    <input type=\"text\" placeholder=\"Địa chỉ chi tiết\" required />\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"payment-method-section\">\r\n                <h3>Phương thức thanh toán</h3>\r\n                <div className=\"payment-options\">\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"cod\"\r\n                            checked={paymentMethod === 'cod'}\r\n                            onChange={handlePaymentChange}\r\n                        />\r\n                        Thanh toán khi nhận hàng (COD)\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"bank\"\r\n                            checked={paymentMethod === 'bank'}\r\n                            onChange={handlePaymentChange}\r\n                        />\r\n                        Chuyển khoản ngân hàng\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"paymentMethod\"\r\n                            value=\"credit\"\r\n                            checked={paymentMethod === 'credit'}\r\n                            onChange={handlePaymentChange}\r\n                        />\r\n                        Thẻ tín dụng / Ghi nợ\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"product-summary\">\r\n                <h3>Sản phẩm</h3>\r\n                {selectedItems.map((item, index) => {\r\n                    const prod = getProductById(item.productId);\r\n                    if (!prod) return null;\r\n\r\n                    const price = prod.discounted_price || prod.price || 0;\r\n                    return (\r\n                        <div className=\"summary-item\" key={index}>\r\n                            <img\r\n                                src={prod.img?.[0] || prod.image?.[0] || 'fallback.jpg'}\r\n                                alt={prod.name}\r\n                            />\r\n                            <div>\r\n                                <p>{prod.name}</p>\r\n                                <p>Số lượng: {item.quantity}</p>\r\n                                <p>Giá: đ{(price * item.quantity).toLocaleString('vi-VN')}</p>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"payment-summary\">\r\n                <h3>Tổng thanh toán</h3>\r\n                <p>đ{totalPrice.toLocaleString('vi-VN')}</p>\r\n                <Link to=\"/order\">\r\n                    <button className=\"btn-confirm\">Đặt hàng</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}; const PaymentMethod = require('../models/PaymentMethodModel');\r\n\r\nexports.createPaymentMethod = async (req, res) => {\r\n    try {\r\n        const {  namePaymentMethod} = req.body;\r\n        const newPaymentMethod = new PaymentMethod({  namePaymentMethod});\r\n        await newPaymentMethod.save();\r\n\r\n        res.status(201).json({\r\n            message: 'PaymentMethod created successfully',\r\n            paymentMethod: newPaymentMethod,\r\n        });\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};\r\n\r\nexports.getAllPaymentMethods = async (req, res) => {\r\n    try {\r\n        const paymentMethods = await PaymentMethod.find();\r\n        res.status(200).json(paymentMethods);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};\r\n\r\nexports.getPaymentMethodById = async (req, res) => {\r\n    try {\r\n        const paymentMethod = await PaymentMethod.findById(req.params.id);\r\n        if (!paymentMethod) {\r\n            return res.status(404).json({ message: 'PaymentMethod not found' });\r\n        }\r\n        res.status(200).json(paymentMethod);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};\r\n\r\nexports.updatePaymentMethod = async (req, res) => {\r\n    try {\r\n        const {  namePaymentMethod} = req.body;\r\n        const paymentMethod = await PaymentMethod.findByIdAndUpdate(\r\n            req.params.id,\r\n            {  namePaymentMethod},\r\n            { new: true }\r\n        );\r\n\r\n        if (!paymentMethod) {\r\n            return res.status(404).json({ message: 'PaymentMethod not found' });\r\n        }\r\n\r\n        res.status(200).json({\r\n            message: 'PaymentMethod updated successfully',\r\n            paymentMethod,\r\n        });\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};\r\n\r\nexports.deletePaymentMethod = async (req, res) => {\r\n    try {\r\n        const paymentMethod = await PaymentMethod.findByIdAndDelete(req.params.id);\r\n        if (!paymentMethod) {\r\n            return res.status(404).json({ message: 'PaymentMethod not found' });\r\n        }\r\n\r\n        res.status(200).json({ message: 'PaymentMethod deleted successfully' });\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};\r\nconst Payment = require('../models/PaymentModel');\r\n\r\nexports.createPayment = async (req, res) => {\r\n    try {\r\n        const { paymentDate, amount, paymentMethodId, paymentStatusId } = req.body;\r\n        \r\n        if (amount <= 0) {\r\n            return res.status(400).json({ message: 'Amount must be greater than zero' });\r\n        }\r\n\r\n        const newPayment = new Payment({ paymentDate, amount, paymentMethodId, paymentStatusId });\r\n        await newPayment.save();\r\n\r\n        res.status(201).json({\r\n            message: 'Payment created successfully',\r\n            payment: newPayment,\r\n        });\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message || 'Something went wrong' });\r\n    }\r\n};\r\n\r\nexports.getAllPayments = async (req, res) => {\r\n    try {\r\n        const payments = await Payment.find()\r\n            .populate('paymentMethodId')\r\n            .populate('paymentStatusId');\r\n        res.status(200).json(payments);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message || 'Something went wrong' });\r\n    }\r\n};\r\n\r\nexports.getPaymentById = async (req, res) => {\r\n    try {\r\n        const payment = await Payment.findById(req.params.id)\r\n            .populate('paymentMethodId')\r\n            .populate('paymentStatusId');\r\n        if (!payment) {\r\n            return res.status(404).json({ message: 'Payment not found' });\r\n        }\r\n        res.status(200).json(payment);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message || 'Something went wrong' });\r\n    }\r\n};\r\n\r\nexports.updatePayment = async (req, res) => {\r\n    try {\r\n        const { paymentDate, amount, paymentMethodId, paymentStatusId } = req.body;\r\n        \r\n        if (amount <= 0) {\r\n            return res.status(400).json({ message: 'Amount must be greater than zero' });\r\n        }\r\n\r\n        const payment = await Payment.findByIdAndUpdate(\r\n            req.params.id,\r\n            { paymentDate, amount, paymentMethodId, paymentStatusId },\r\n            { new: true }\r\n        );\r\n\r\n        if (!payment) {\r\n            return res.status(404).json({ message: 'Payment not found' });\r\n        }\r\n\r\n        res.status(200).json({\r\n            message: 'Payment updated successfully',\r\n            payment,\r\n        });\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message || 'Something went wrong' });\r\n    }\r\n};\r\n\r\nexports.deletePayment = async (req, res) => {\r\n    try {\r\n        const payment = await Payment.findByIdAndDelete(req.params.id);\r\n        if (!payment) {\r\n            return res.status(404).json({ message: 'Payment not found' });\r\n        }\r\n\r\n        res.status(200).json({ message: 'Payment deleted successfully' });\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message || 'Something went wrong' });\r\n    }\r\n};"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,SAASC,aAAa,QAAQ,0BAA0B;AAAC;AAEzD,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACvB,MAAM;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGH,aAAa,EAAE;EAC/C,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAMO,aAAa,GAAGJ,SAAS,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;;EAE7D;EACA,MAAMC,cAAc,GAAIC,EAAE,IAAKR,QAAQ,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKH,EAAE,CAAC;;EAEjE;EACA,MAAMI,UAAU,GAAGT,aAAa,CAACU,MAAM,CAAC,CAACC,GAAG,EAAET,IAAI,KAAK;IACnD,MAAMU,IAAI,GAAGR,cAAc,CAACF,IAAI,CAACW,SAAS,CAAC;IAC3C,IAAI,CAACD,IAAI,EAAE,OAAOD,GAAG;IACrB,MAAMG,KAAK,GAAGF,IAAI,CAACG,gBAAgB,IAAIH,IAAI,CAACE,KAAK,IAAI,CAAC;IACtD,OAAOH,GAAG,GAAGG,KAAK,GAAGZ,IAAI,CAACc,QAAQ;EACtC,CAAC,EAAE,CAAC,CAAC;EAEL,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IAC/BnB,gBAAgB,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAE9B;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC5B;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAM,SAAS,EAAC,cAAc;QAAA,wBAC1B;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,sBAAW;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eACtD;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,mCAAe;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1D;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,+BAAkB;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7D;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,sCAAkB;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eAEN;MAAK,SAAS,EAAC,wBAAwB;MAAA,wBACnC;QAAA,UAAI;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC/B;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAA,wBACI;YACI,IAAI,EAAC,OAAO;YACZ,IAAI,EAAC,eAAe;YACpB,KAAK,EAAC,KAAK;YACX,OAAO,EAAEtB,aAAa,KAAK,KAAM;YACjC,QAAQ,EAAEmB;UAAoB;YAAA;YAAA;YAAA;UAAA,QAChC,6CAEN;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eACR;UAAA,wBACI;YACI,IAAI,EAAC,OAAO;YACZ,IAAI,EAAC,eAAe;YACpB,KAAK,EAAC,MAAM;YACZ,OAAO,EAAEnB,aAAa,KAAK,MAAO;YAClC,QAAQ,EAAEmB;UAAoB;YAAA;YAAA;YAAA;UAAA,QAChC,0CAEN;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eACR;UAAA,wBACI;YACI,IAAI,EAAC,OAAO;YACZ,IAAI,EAAC,eAAe;YACpB,KAAK,EAAC,QAAQ;YACd,OAAO,EAAEnB,aAAa,KAAK,QAAS;YACpC,QAAQ,EAAEmB;UAAoB;YAAA;YAAA;YAAA;UAAA,QAChC,2CAEN;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eAEN;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC5B;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,EAChBjB,aAAa,CAACqB,GAAG,CAAC,CAACnB,IAAI,EAAEoB,KAAK,KAAK;QAAA;QAChC,MAAMV,IAAI,GAAGR,cAAc,CAACF,IAAI,CAACW,SAAS,CAAC;QAC3C,IAAI,CAACD,IAAI,EAAE,OAAO,IAAI;QAEtB,MAAME,KAAK,GAAGF,IAAI,CAACG,gBAAgB,IAAIH,IAAI,CAACE,KAAK,IAAI,CAAC;QACtD,oBACI;UAAK,SAAS,EAAC,cAAc;UAAA,wBACzB;YACI,GAAG,EAAE,cAAAF,IAAI,CAACW,GAAG,8CAAR,UAAW,CAAC,CAAC,qBAAIX,IAAI,CAACY,KAAK,gDAAV,YAAa,CAAC,CAAC,KAAI,cAAe;YACxD,GAAG,EAAEZ,IAAI,CAACa;UAAK;YAAA;YAAA;YAAA;UAAA,QACjB,eACF;YAAA,wBACI;cAAA,UAAIb,IAAI,CAACa;YAAI;cAAA;cAAA;cAAA;YAAA,QAAK,eAClB;cAAA,WAAG,2BAAU,EAACvB,IAAI,CAACc,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAAK,eAChC;cAAA,WAAG,gBAAM,EAAC,CAACF,KAAK,GAAGZ,IAAI,CAACc,QAAQ,EAAEU,cAAc,CAAC,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAC5D;QAAA,GATyBJ,KAAK;UAAA;UAAA;UAAA;QAAA,QAUlC;MAEd,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eAEN;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC5B;QAAA,UAAI;MAAe;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB;QAAA,WAAG,QAAC,EAACb,UAAU,CAACiB,cAAc,CAAC,OAAO,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC5C,QAAC,IAAI;QAAC,EAAE,EAAC,QAAQ;QAAA,uBACb;UAAQ,SAAS,EAAC,aAAa;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAC9C;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAvGW/B,KAAK;EAAA,QACkBD,aAAa;AAAA;AAAA,KADpCC,KAAK;AAuGf,MAAMgC,aAAa,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AAEhEC,OAAO,CAACC,mBAAmB,GAAG,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACA,MAAM;MAAGC;IAAiB,CAAC,GAAGF,GAAG,CAACG,IAAI;IACtC,MAAMC,gBAAgB,GAAG,IAAIR,aAAa,CAAC;MAAGM;IAAiB,CAAC,CAAC;IACjE,MAAME,gBAAgB,CAACC,IAAI,EAAE;IAE7BJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACjBC,OAAO,EAAE,oCAAoC;MAC7CzC,aAAa,EAAEqC;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD;IAAQ,CAAC,CAAC;EACpD;AACJ,CAAC;AAEDV,OAAO,CAACY,oBAAoB,GAAG,OAAOV,GAAG,EAAEC,GAAG,KAAK;EAC/C,IAAI;IACA,MAAMU,cAAc,GAAG,MAAMf,aAAa,CAACrB,IAAI,EAAE;IACjD0B,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACI,cAAc,CAAC;EACxC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD;IAAQ,CAAC,CAAC;EACpD;AACJ,CAAC;AAEDV,OAAO,CAACc,oBAAoB,GAAG,OAAOZ,GAAG,EAAEC,GAAG,KAAK;EAC/C,IAAI;IACA,MAAMlC,aAAa,GAAG,MAAM6B,aAAa,CAACiB,QAAQ,CAACb,GAAG,CAACc,MAAM,CAACxC,EAAE,CAAC;IACjE,IAAI,CAACP,aAAa,EAAE;MAChB,OAAOkC,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA0B,CAAC,CAAC;IACvE;IACAP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACxC,aAAa,CAAC;EACvC,CAAC,CAAC,OAAO0C,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD;IAAQ,CAAC,CAAC;EACpD;AACJ,CAAC;AAEDV,OAAO,CAACiB,mBAAmB,GAAG,OAAOf,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACA,MAAM;MAAGC;IAAiB,CAAC,GAAGF,GAAG,CAACG,IAAI;IACtC,MAAMpC,aAAa,GAAG,MAAM6B,aAAa,CAACoB,iBAAiB,CACvDhB,GAAG,CAACc,MAAM,CAACxC,EAAE,EACb;MAAG4B;IAAiB,CAAC,EACrB;MAAEe,GAAG,EAAE;IAAK,CAAC,CAChB;IAED,IAAI,CAAClD,aAAa,EAAE;MAChB,OAAOkC,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA0B,CAAC,CAAC;IACvE;IAEAP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACjBC,OAAO,EAAE,oCAAoC;MAC7CzC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAO0C,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD;IAAQ,CAAC,CAAC;EACpD;AACJ,CAAC;AAEDV,OAAO,CAACoB,mBAAmB,GAAG,OAAOlB,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACA,MAAMlC,aAAa,GAAG,MAAM6B,aAAa,CAACuB,iBAAiB,CAACnB,GAAG,CAACc,MAAM,CAACxC,EAAE,CAAC;IAC1E,IAAI,CAACP,aAAa,EAAE;MAChB,OAAOkC,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA0B,CAAC,CAAC;IACvE;IAEAP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAqC,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD;IAAQ,CAAC,CAAC;EACpD;AACJ,CAAC;AACD,MAAMY,OAAO,GAAGvB,OAAO,CAAC,wBAAwB,CAAC;AAEjDC,OAAO,CAACuB,aAAa,GAAG,OAAOrB,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACA,MAAM;MAAEqB,WAAW;MAAEC,MAAM;MAAEC,eAAe;MAAEC;IAAgB,CAAC,GAAGzB,GAAG,CAACG,IAAI;IAE1E,IAAIoB,MAAM,IAAI,CAAC,EAAE;MACb,OAAOtB,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAmC,CAAC,CAAC;IAChF;IAEA,MAAMkB,UAAU,GAAG,IAAIN,OAAO,CAAC;MAAEE,WAAW;MAAEC,MAAM;MAAEC,eAAe;MAAEC;IAAgB,CAAC,CAAC;IACzF,MAAMC,UAAU,CAACrB,IAAI,EAAE;IAEvBJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACjBC,OAAO,EAAE,8BAA8B;MACvCmB,OAAO,EAAED;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAAuB,CAAC,CAAC;EAC9E;AACJ,CAAC;AAEDV,OAAO,CAAC8B,cAAc,GAAG,OAAO5B,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI;IACA,MAAM4B,QAAQ,GAAG,MAAMT,OAAO,CAAC7C,IAAI,EAAE,CAChCuD,QAAQ,CAAC,iBAAiB,CAAC,CAC3BA,QAAQ,CAAC,iBAAiB,CAAC;IAChC7B,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACsB,QAAQ,CAAC;EAClC,CAAC,CAAC,OAAOpB,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAAuB,CAAC,CAAC;EAC9E;AACJ,CAAC;AAEDV,OAAO,CAACiC,cAAc,GAAG,OAAO/B,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI;IACA,MAAM0B,OAAO,GAAG,MAAMP,OAAO,CAACP,QAAQ,CAACb,GAAG,CAACc,MAAM,CAACxC,EAAE,CAAC,CAChDwD,QAAQ,CAAC,iBAAiB,CAAC,CAC3BA,QAAQ,CAAC,iBAAiB,CAAC;IAChC,IAAI,CAACH,OAAO,EAAE;MACV,OAAO1B,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAoB,CAAC,CAAC;IACjE;IACAP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACoB,OAAO,CAAC;EACjC,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAAuB,CAAC,CAAC;EAC9E;AACJ,CAAC;AAEDV,OAAO,CAACkC,aAAa,GAAG,OAAOhC,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACA,MAAM;MAAEqB,WAAW;MAAEC,MAAM;MAAEC,eAAe;MAAEC;IAAgB,CAAC,GAAGzB,GAAG,CAACG,IAAI;IAE1E,IAAIoB,MAAM,IAAI,CAAC,EAAE;MACb,OAAOtB,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAmC,CAAC,CAAC;IAChF;IAEA,MAAMmB,OAAO,GAAG,MAAMP,OAAO,CAACJ,iBAAiB,CAC3ChB,GAAG,CAACc,MAAM,CAACxC,EAAE,EACb;MAAEgD,WAAW;MAAEC,MAAM;MAAEC,eAAe;MAAEC;IAAgB,CAAC,EACzD;MAAER,GAAG,EAAE;IAAK,CAAC,CAChB;IAED,IAAI,CAACU,OAAO,EAAE;MACV,OAAO1B,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAoB,CAAC,CAAC;IACjE;IAEAP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACjBC,OAAO,EAAE,8BAA8B;MACvCmB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAAuB,CAAC,CAAC;EAC9E;AACJ,CAAC;AAEDV,OAAO,CAACmC,aAAa,GAAG,OAAOjC,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACA,MAAM0B,OAAO,GAAG,MAAMP,OAAO,CAACD,iBAAiB,CAACnB,GAAG,CAACc,MAAM,CAACxC,EAAE,CAAC;IAC9D,IAAI,CAACqD,OAAO,EAAE;MACV,OAAO1B,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAoB,CAAC,CAAC;IACjE;IAEAP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEC,KAAK,CAACD,OAAO,IAAI;IAAuB,CAAC,CAAC;EAC9E;AACJ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}